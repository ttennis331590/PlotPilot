{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\repos\\\\PlotPilot\\\\client\\\\src\\\\Components\\\\UserResponse.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Button } from \"react-bulma-components\";\nimport ReactQuill from \"react-quill\";\nimport _ from \"lodash\";\nimport \"quill/dist/quill.snow.css\";\nimport blockAdBlock from \"blockadblock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserResponse() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [wordCount, setWordCount] = useState(0);\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  const quillRef = useRef(null);\n  useEffect(() => {\n    console.log(value);\n  }, [value]);\n  useEffect(() => {\n    if (isReadOnly) {\n      adBlockDetected();\n    } else {\n      adBlockNotDetected();\n    }\n  }, [isReadOnly]);\n  const handleChange = (content, delta, source, editor) => {\n    const text = editor.getText().trim();\n    const currentWordCount = text.length ? text.split(/\\s+/).length : 0;\n    if (isReadOnly) {\n      if (currentWordCount <= 1000) {\n        setValue(content);\n        setWordCount(currentWordCount);\n        setIsReadOnly(false);\n      }\n    } else {\n      if (currentWordCount > 1000) {\n        setIsReadOnly(true);\n      }\n      setValue(content);\n      setWordCount(currentWordCount);\n    }\n  };\n  function adBlockNotDetected() {\n    if (isReadOnly) {\n      setIsReadOnly(false);\n    }\n  }\n  function adBlockDetected() {\n    setIsReadOnly(true);\n  }\n\n  // We look at whether BlockAdBlock already exists.\n  if (typeof blockAdBlock !== \"undefined\" || typeof BlockAdBlock !== \"undefined\") {\n    // If this is the case, it means that something tries to usurp our identity\n    // So, considering that it is a detection\n    adBlockDetected();\n  } else {\n    // Otherwise, you import the script BlockAdBlock\n    var importFAB = document.createElement(\"script\");\n    importFAB.onload = function () {\n      // If all goes well, we configure BlockAdBlock\n      blockAdBlock.onDetected(adBlockDetected);\n      blockAdBlock.onNotDetected(adBlockNotDetected);\n    };\n    importFAB.onerror = function () {\n      // If the script does not load (blocked, integrity error, ...)\n      // Then a detection is triggered\n      adBlockDetected();\n    };\n    importFAB.integrity = \"sha256-xjwKUY/NgkPjZZBOtOxRYtK20GaqTwUCf7WYCJ1z69w=\";\n    importFAB.crossOrigin = \"anonymous\";\n    importFAB.src = \"https://cdnjs.cloudflare.com/ajax/libs/blockadblock/3.2.1/blockadblock.min.js\";\n    document.head.appendChild(importFAB);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n      ref: quillRef,\n      theme: \"snow\",\n      className: \"editor-container\",\n      value: value,\n      onChange: handleChange,\n      readOnly: isReadOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Word count: \", wordCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"submit-button mt-2\",\n      fullwidth: true,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(UserResponse, \"1AWTu5YQRvXC5Ggr01QyrVl+y3A=\");\n_c = UserResponse;\nexport default UserResponse;\nvar _c;\n$RefreshReg$(_c, \"UserResponse\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Button","ReactQuill","_","blockAdBlock","jsxDEV","_jsxDEV","UserResponse","_s","value","setValue","wordCount","setWordCount","isReadOnly","setIsReadOnly","quillRef","console","log","adBlockDetected","adBlockNotDetected","handleChange","content","delta","source","editor","text","getText","trim","currentWordCount","length","split","BlockAdBlock","importFAB","document","createElement","onload","onDetected","onNotDetected","onerror","integrity","crossOrigin","src","head","appendChild","children","ref","theme","className","onChange","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","fullwidth","_c","$RefreshReg$"],"sources":["C:/dev/repos/PlotPilot/client/src/Components/UserResponse.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button } from \"react-bulma-components\";\r\nimport ReactQuill from \"react-quill\";\r\nimport _ from \"lodash\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport blockAdBlock from \"blockadblock\";\r\n\r\nfunction UserResponse() {\r\n  const [value, setValue] = useState(\"\");\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const [isReadOnly, setIsReadOnly] = useState(false);\r\n  const quillRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log(value);\r\n  }, [value]);\r\n  \r\n  useEffect(() => {\r\n    if (isReadOnly) {\r\n      adBlockDetected();\r\n    } else {\r\n      adBlockNotDetected();\r\n    }\r\n  }, [isReadOnly]);\r\n  \r\n  const handleChange = (content, delta, source, editor) => {\r\n    const text = editor.getText().trim();\r\n    const currentWordCount = text.length ? text.split(/\\s+/).length : 0;\r\n    if (isReadOnly) {\r\n      if (currentWordCount <= 1000) {\r\n        setValue(content);\r\n        setWordCount(currentWordCount);\r\n        setIsReadOnly(false);\r\n      }\r\n    } else {\r\n      if (currentWordCount > 1000) {\r\n        setIsReadOnly(true);\r\n      }\r\n      setValue(content);\r\n      setWordCount(currentWordCount);\r\n    }\r\n  };\r\n  function adBlockNotDetected() {\r\n    if (isReadOnly) {\r\n      setIsReadOnly(false);\r\n    }\r\n  }\r\n  \r\n  function adBlockDetected() {\r\n    setIsReadOnly(true);\r\n  }\r\n  \r\n  // We look at whether BlockAdBlock already exists.\r\n  if (typeof blockAdBlock !== \"undefined\" || typeof BlockAdBlock !== \"undefined\") {\r\n    // If this is the case, it means that something tries to usurp our identity\r\n    // So, considering that it is a detection\r\n    adBlockDetected();\r\n  } else {\r\n    // Otherwise, you import the script BlockAdBlock\r\n    var importFAB = document.createElement(\"script\");\r\n    importFAB.onload = function () {\r\n      // If all goes well, we configure BlockAdBlock\r\n      blockAdBlock.onDetected(adBlockDetected);\r\n      blockAdBlock.onNotDetected(adBlockNotDetected);\r\n    };\r\n    importFAB.onerror = function () {\r\n      // If the script does not load (blocked, integrity error, ...)\r\n      // Then a detection is triggered\r\n      adBlockDetected();\r\n    };\r\n    importFAB.integrity = \"sha256-xjwKUY/NgkPjZZBOtOxRYtK20GaqTwUCf7WYCJ1z69w=\";\r\n    importFAB.crossOrigin = \"anonymous\";\r\n    importFAB.src =\r\n      \"https://cdnjs.cloudflare.com/ajax/libs/blockadblock/3.2.1/blockadblock.min.js\";\r\n    document.head.appendChild(importFAB);\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <ReactQuill\r\n        ref={quillRef}\r\n        theme=\"snow\"\r\n        className=\"editor-container\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        readOnly={isReadOnly}\r\n      />\r\n      <p>Word count: {wordCount}</p>\r\n      <Button className=\"submit-button mt-2\" fullwidth={true}>\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n  \r\n\r\n}\r\n\r\nexport default UserResponse;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}