{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"Parchment\"] = factory();else root[\"Parchment\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function () {\n  return (/******/function (modules) {\n      // webpackBootstrap\n      /******/ // The module cache\n      /******/\n      var installedModules = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/if (installedModules[moduleId]) {\n          /******/return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n          /******/i: moduleId,\n          /******/l: false,\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.l = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /******/\n      /******/ // expose the modules object (__webpack_modules__)\n      /******/\n      __webpack_require__.m = modules;\n      /******/\n      /******/ // expose the module cache\n      /******/\n      __webpack_require__.c = installedModules;\n      /******/\n      /******/ // define getter function for harmony exports\n      /******/\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/if (!__webpack_require__.o(exports, name)) {\n          /******/Object.defineProperty(exports, name, {\n            /******/configurable: false,\n            /******/enumerable: true,\n            /******/get: getter\n            /******/\n          });\n          /******/\n        }\n        /******/\n      };\n      /******/\n      /******/ // getDefaultExport function for compatibility with non-harmony modules\n      /******/\n      __webpack_require__.n = function (module) {\n        /******/var getter = module && module.__esModule ? /******/function getDefault() {\n          return module['default'];\n        } : /******/function getModuleExports() {\n          return module;\n        };\n        /******/\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n        return getter;\n        /******/\n      };\n      /******/\n      /******/ // Object.prototype.hasOwnProperty.call\n      /******/\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n      /******/ // __webpack_public_path__\n      /******/\n      __webpack_require__.p = \"\";\n      /******/\n      /******/ // Load entry module and return exports\n      /******/\n      return __webpack_require__(__webpack_require__.s = 9);\n      /******/\n    }\n    /************************************************************************/\n    /******/([/* 0 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var ParchmentError = /** @class */function (_super) {\n        __extends(ParchmentError, _super);\n        function ParchmentError(message) {\n          var _this = this;\n          message = '[Parchment] ' + message;\n          _this = _super.call(this, message) || this;\n          _this.message = message;\n          _this.name = _this.constructor.name;\n          return _this;\n        }\n        return ParchmentError;\n      }(Error);\n      exports.ParchmentError = ParchmentError;\n      var attributes = {};\n      var classes = {};\n      var tags = {};\n      var types = {};\n      exports.DATA_KEY = '__blot';\n      var Scope;\n      (function (Scope) {\n        Scope[Scope[\"TYPE\"] = 3] = \"TYPE\";\n        Scope[Scope[\"LEVEL\"] = 12] = \"LEVEL\";\n        Scope[Scope[\"ATTRIBUTE\"] = 13] = \"ATTRIBUTE\";\n        Scope[Scope[\"BLOT\"] = 14] = \"BLOT\";\n        Scope[Scope[\"INLINE\"] = 7] = \"INLINE\";\n        Scope[Scope[\"BLOCK\"] = 11] = \"BLOCK\";\n        Scope[Scope[\"BLOCK_BLOT\"] = 10] = \"BLOCK_BLOT\";\n        Scope[Scope[\"INLINE_BLOT\"] = 6] = \"INLINE_BLOT\";\n        Scope[Scope[\"BLOCK_ATTRIBUTE\"] = 9] = \"BLOCK_ATTRIBUTE\";\n        Scope[Scope[\"INLINE_ATTRIBUTE\"] = 5] = \"INLINE_ATTRIBUTE\";\n        Scope[Scope[\"ANY\"] = 15] = \"ANY\";\n      })(Scope = exports.Scope || (exports.Scope = {}));\n      function create(input, value) {\n        var match = query(input);\n        if (match == null) {\n          throw new ParchmentError(\"Unable to create \" + input + \" blot\");\n        }\n        var BlotClass = match;\n        var node =\n        // @ts-ignore\n        input instanceof Node || input['nodeType'] === Node.TEXT_NODE ? input : BlotClass.create(value);\n        return new BlotClass(node, value);\n      }\n      exports.create = create;\n      function find(node, bubble) {\n        if (bubble === void 0) {\n          bubble = false;\n        }\n        if (node == null) return null;\n        // @ts-ignore\n        if (node[exports.DATA_KEY] != null) return node[exports.DATA_KEY].blot;\n        if (bubble) return find(node.parentNode, bubble);\n        return null;\n      }\n      exports.find = find;\n      function query(query, scope) {\n        if (scope === void 0) {\n          scope = Scope.ANY;\n        }\n        var match;\n        if (typeof query === 'string') {\n          match = types[query] || attributes[query];\n          // @ts-ignore\n        } else if (query instanceof Text || query['nodeType'] === Node.TEXT_NODE) {\n          match = types['text'];\n        } else if (typeof query === 'number') {\n          if (query & Scope.LEVEL & Scope.BLOCK) {\n            match = types['block'];\n          } else if (query & Scope.LEVEL & Scope.INLINE) {\n            match = types['inline'];\n          }\n        } else if (query instanceof HTMLElement) {\n          var names = (query.getAttribute('class') || '').split(/\\s+/);\n          for (var i in names) {\n            match = classes[names[i]];\n            if (match) break;\n          }\n          match = match || tags[query.tagName];\n        }\n        if (match == null) return null;\n        // @ts-ignore\n        if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope) return match;\n        return null;\n      }\n      exports.query = query;\n      function register() {\n        var Definitions = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          Definitions[_i] = arguments[_i];\n        }\n        if (Definitions.length > 1) {\n          return Definitions.map(function (d) {\n            return register(d);\n          });\n        }\n        var Definition = Definitions[0];\n        if (typeof Definition.blotName !== 'string' && typeof Definition.attrName !== 'string') {\n          throw new ParchmentError('Invalid definition');\n        } else if (Definition.blotName === 'abstract') {\n          throw new ParchmentError('Cannot register abstract class');\n        }\n        types[Definition.blotName || Definition.attrName] = Definition;\n        if (typeof Definition.keyName === 'string') {\n          attributes[Definition.keyName] = Definition;\n        } else {\n          if (Definition.className != null) {\n            classes[Definition.className] = Definition;\n          }\n          if (Definition.tagName != null) {\n            if (Array.isArray(Definition.tagName)) {\n              Definition.tagName = Definition.tagName.map(function (tagName) {\n                return tagName.toUpperCase();\n              });\n            } else {\n              Definition.tagName = Definition.tagName.toUpperCase();\n            }\n            var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];\n            tagNames.forEach(function (tag) {\n              if (tags[tag] == null || Definition.className == null) {\n                tags[tag] = Definition;\n              }\n            });\n          }\n        }\n        return Definition;\n      }\n      exports.register = register;\n\n      /***/\n    }, /* 1 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var Registry = __webpack_require__(0);\n      var Attributor = /** @class */function () {\n        function Attributor(attrName, keyName, options) {\n          if (options === void 0) {\n            options = {};\n          }\n          this.attrName = attrName;\n          this.keyName = keyName;\n          var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;\n          if (options.scope != null) {\n            // Ignore type bits, force attribute bit\n            this.scope = options.scope & Registry.Scope.LEVEL | attributeBit;\n          } else {\n            this.scope = Registry.Scope.ATTRIBUTE;\n          }\n          if (options.whitelist != null) this.whitelist = options.whitelist;\n        }\n        Attributor.keys = function (node) {\n          return [].map.call(node.attributes, function (item) {\n            return item.name;\n          });\n        };\n        Attributor.prototype.add = function (node, value) {\n          if (!this.canAdd(node, value)) return false;\n          node.setAttribute(this.keyName, value);\n          return true;\n        };\n        Attributor.prototype.canAdd = function (node, value) {\n          var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));\n          if (match == null) return false;\n          if (this.whitelist == null) return true;\n          if (typeof value === 'string') {\n            return this.whitelist.indexOf(value.replace(/[\"']/g, '')) > -1;\n          } else {\n            return this.whitelist.indexOf(value) > -1;\n          }\n        };\n        Attributor.prototype.remove = function (node) {\n          node.removeAttribute(this.keyName);\n        };\n        Attributor.prototype.value = function (node) {\n          var value = node.getAttribute(this.keyName);\n          if (this.canAdd(node, value) && value) {\n            return value;\n          }\n          return '';\n        };\n        return Attributor;\n      }();\n      exports.default = Attributor;\n\n      /***/\n    }, /* 2 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var linked_list_1 = __webpack_require__(11);\n      var shadow_1 = __webpack_require__(5);\n      var Registry = __webpack_require__(0);\n      var ContainerBlot = /** @class */function (_super) {\n        __extends(ContainerBlot, _super);\n        function ContainerBlot(domNode) {\n          var _this = _super.call(this, domNode) || this;\n          _this.build();\n          return _this;\n        }\n        ContainerBlot.prototype.appendChild = function (other) {\n          this.insertBefore(other);\n        };\n        ContainerBlot.prototype.attach = function () {\n          _super.prototype.attach.call(this);\n          this.children.forEach(function (child) {\n            child.attach();\n          });\n        };\n        ContainerBlot.prototype.build = function () {\n          var _this = this;\n          this.children = new linked_list_1.default();\n          // Need to be reversed for if DOM nodes already in order\n          [].slice.call(this.domNode.childNodes).reverse().forEach(function (node) {\n            try {\n              var child = makeBlot(node);\n              _this.insertBefore(child, _this.children.head || undefined);\n            } catch (err) {\n              if (err instanceof Registry.ParchmentError) return;else throw err;\n            }\n          });\n        };\n        ContainerBlot.prototype.deleteAt = function (index, length) {\n          if (index === 0 && length === this.length()) {\n            return this.remove();\n          }\n          this.children.forEachAt(index, length, function (child, offset, length) {\n            child.deleteAt(offset, length);\n          });\n        };\n        ContainerBlot.prototype.descendant = function (criteria, index) {\n          var _a = this.children.find(index),\n            child = _a[0],\n            offset = _a[1];\n          if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {\n            return [child, offset];\n          } else if (child instanceof ContainerBlot) {\n            return child.descendant(criteria, offset);\n          } else {\n            return [null, -1];\n          }\n        };\n        ContainerBlot.prototype.descendants = function (criteria, index, length) {\n          if (index === void 0) {\n            index = 0;\n          }\n          if (length === void 0) {\n            length = Number.MAX_VALUE;\n          }\n          var descendants = [];\n          var lengthLeft = length;\n          this.children.forEachAt(index, length, function (child, index, length) {\n            if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {\n              descendants.push(child);\n            }\n            if (child instanceof ContainerBlot) {\n              descendants = descendants.concat(child.descendants(criteria, index, lengthLeft));\n            }\n            lengthLeft -= length;\n          });\n          return descendants;\n        };\n        ContainerBlot.prototype.detach = function () {\n          this.children.forEach(function (child) {\n            child.detach();\n          });\n          _super.prototype.detach.call(this);\n        };\n        ContainerBlot.prototype.formatAt = function (index, length, name, value) {\n          this.children.forEachAt(index, length, function (child, offset, length) {\n            child.formatAt(offset, length, name, value);\n          });\n        };\n        ContainerBlot.prototype.insertAt = function (index, value, def) {\n          var _a = this.children.find(index),\n            child = _a[0],\n            offset = _a[1];\n          if (child) {\n            child.insertAt(offset, value, def);\n          } else {\n            var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);\n            this.appendChild(blot);\n          }\n        };\n        ContainerBlot.prototype.insertBefore = function (childBlot, refBlot) {\n          if (this.statics.allowedChildren != null && !this.statics.allowedChildren.some(function (child) {\n            return childBlot instanceof child;\n          })) {\n            throw new Registry.ParchmentError(\"Cannot insert \" + childBlot.statics.blotName + \" into \" + this.statics.blotName);\n          }\n          childBlot.insertInto(this, refBlot);\n        };\n        ContainerBlot.prototype.length = function () {\n          return this.children.reduce(function (memo, child) {\n            return memo + child.length();\n          }, 0);\n        };\n        ContainerBlot.prototype.moveChildren = function (targetParent, refNode) {\n          this.children.forEach(function (child) {\n            targetParent.insertBefore(child, refNode);\n          });\n        };\n        ContainerBlot.prototype.optimize = function (context) {\n          _super.prototype.optimize.call(this, context);\n          if (this.children.length === 0) {\n            if (this.statics.defaultChild != null) {\n              var child = Registry.create(this.statics.defaultChild);\n              this.appendChild(child);\n              child.optimize(context);\n            } else {\n              this.remove();\n            }\n          }\n        };\n        ContainerBlot.prototype.path = function (index, inclusive) {\n          if (inclusive === void 0) {\n            inclusive = false;\n          }\n          var _a = this.children.find(index, inclusive),\n            child = _a[0],\n            offset = _a[1];\n          var position = [[this, index]];\n          if (child instanceof ContainerBlot) {\n            return position.concat(child.path(offset, inclusive));\n          } else if (child != null) {\n            position.push([child, offset]);\n          }\n          return position;\n        };\n        ContainerBlot.prototype.removeChild = function (child) {\n          this.children.remove(child);\n        };\n        ContainerBlot.prototype.replace = function (target) {\n          if (target instanceof ContainerBlot) {\n            target.moveChildren(this);\n          }\n          _super.prototype.replace.call(this, target);\n        };\n        ContainerBlot.prototype.split = function (index, force) {\n          if (force === void 0) {\n            force = false;\n          }\n          if (!force) {\n            if (index === 0) return this;\n            if (index === this.length()) return this.next;\n          }\n          var after = this.clone();\n          this.parent.insertBefore(after, this.next);\n          this.children.forEachAt(index, this.length(), function (child, offset, length) {\n            child = child.split(offset, force);\n            after.appendChild(child);\n          });\n          return after;\n        };\n        ContainerBlot.prototype.unwrap = function () {\n          this.moveChildren(this.parent, this.next);\n          this.remove();\n        };\n        ContainerBlot.prototype.update = function (mutations, context) {\n          var _this = this;\n          var addedNodes = [];\n          var removedNodes = [];\n          mutations.forEach(function (mutation) {\n            if (mutation.target === _this.domNode && mutation.type === 'childList') {\n              addedNodes.push.apply(addedNodes, mutation.addedNodes);\n              removedNodes.push.apply(removedNodes, mutation.removedNodes);\n            }\n          });\n          removedNodes.forEach(function (node) {\n            // Check node has actually been removed\n            // One exception is Chrome does not immediately remove IFRAMEs\n            // from DOM but MutationRecord is correct in its reported removal\n            if (node.parentNode != null &&\n            // @ts-ignore\n            node.tagName !== 'IFRAME' && document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n              return;\n            }\n            var blot = Registry.find(node);\n            if (blot == null) return;\n            if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {\n              blot.detach();\n            }\n          });\n          addedNodes.filter(function (node) {\n            return node.parentNode == _this.domNode;\n          }).sort(function (a, b) {\n            if (a === b) return 0;\n            if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n              return 1;\n            }\n            return -1;\n          }).forEach(function (node) {\n            var refBlot = null;\n            if (node.nextSibling != null) {\n              refBlot = Registry.find(node.nextSibling);\n            }\n            var blot = makeBlot(node);\n            if (blot.next != refBlot || blot.next == null) {\n              if (blot.parent != null) {\n                blot.parent.removeChild(_this);\n              }\n              _this.insertBefore(blot, refBlot || undefined);\n            }\n          });\n        };\n        return ContainerBlot;\n      }(shadow_1.default);\n      function makeBlot(node) {\n        var blot = Registry.find(node);\n        if (blot == null) {\n          try {\n            blot = Registry.create(node);\n          } catch (e) {\n            blot = Registry.create(Registry.Scope.INLINE);\n            [].slice.call(node.childNodes).forEach(function (child) {\n              // @ts-ignore\n              blot.domNode.appendChild(child);\n            });\n            if (node.parentNode) {\n              node.parentNode.replaceChild(blot.domNode, node);\n            }\n            blot.attach();\n          }\n        }\n        return blot;\n      }\n      exports.default = ContainerBlot;\n\n      /***/\n    }, /* 3 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var attributor_1 = __webpack_require__(1);\n      var store_1 = __webpack_require__(6);\n      var container_1 = __webpack_require__(2);\n      var Registry = __webpack_require__(0);\n      var FormatBlot = /** @class */function (_super) {\n        __extends(FormatBlot, _super);\n        function FormatBlot(domNode) {\n          var _this = _super.call(this, domNode) || this;\n          _this.attributes = new store_1.default(_this.domNode);\n          return _this;\n        }\n        FormatBlot.formats = function (domNode) {\n          if (typeof this.tagName === 'string') {\n            return true;\n          } else if (Array.isArray(this.tagName)) {\n            return domNode.tagName.toLowerCase();\n          }\n          return undefined;\n        };\n        FormatBlot.prototype.format = function (name, value) {\n          var format = Registry.query(name);\n          if (format instanceof attributor_1.default) {\n            this.attributes.attribute(format, value);\n          } else if (value) {\n            if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {\n              this.replaceWith(name, value);\n            }\n          }\n        };\n        FormatBlot.prototype.formats = function () {\n          var formats = this.attributes.values();\n          var format = this.statics.formats(this.domNode);\n          if (format != null) {\n            formats[this.statics.blotName] = format;\n          }\n          return formats;\n        };\n        FormatBlot.prototype.replaceWith = function (name, value) {\n          var replacement = _super.prototype.replaceWith.call(this, name, value);\n          this.attributes.copy(replacement);\n          return replacement;\n        };\n        FormatBlot.prototype.update = function (mutations, context) {\n          var _this = this;\n          _super.prototype.update.call(this, mutations, context);\n          if (mutations.some(function (mutation) {\n            return mutation.target === _this.domNode && mutation.type === 'attributes';\n          })) {\n            this.attributes.build();\n          }\n        };\n        FormatBlot.prototype.wrap = function (name, value) {\n          var wrapper = _super.prototype.wrap.call(this, name, value);\n          if (wrapper instanceof FormatBlot && wrapper.statics.scope === this.statics.scope) {\n            this.attributes.move(wrapper);\n          }\n          return wrapper;\n        };\n        return FormatBlot;\n      }(container_1.default);\n      exports.default = FormatBlot;\n\n      /***/\n    }, /* 4 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var shadow_1 = __webpack_require__(5);\n      var Registry = __webpack_require__(0);\n      var LeafBlot = /** @class */function (_super) {\n        __extends(LeafBlot, _super);\n        function LeafBlot() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n        LeafBlot.value = function (domNode) {\n          return true;\n        };\n        LeafBlot.prototype.index = function (node, offset) {\n          if (this.domNode === node || this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            return Math.min(offset, 1);\n          }\n          return -1;\n        };\n        LeafBlot.prototype.position = function (index, inclusive) {\n          var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);\n          if (index > 0) offset += 1;\n          return [this.parent.domNode, offset];\n        };\n        LeafBlot.prototype.value = function () {\n          return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;\n          var _a;\n        };\n        LeafBlot.scope = Registry.Scope.INLINE_BLOT;\n        return LeafBlot;\n      }(shadow_1.default);\n      exports.default = LeafBlot;\n\n      /***/\n    }, /* 5 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var Registry = __webpack_require__(0);\n      var ShadowBlot = /** @class */function () {\n        function ShadowBlot(domNode) {\n          this.domNode = domNode;\n          // @ts-ignore\n          this.domNode[Registry.DATA_KEY] = {\n            blot: this\n          };\n        }\n        Object.defineProperty(ShadowBlot.prototype, \"statics\", {\n          // Hack for accessing inherited static methods\n          get: function () {\n            return this.constructor;\n          },\n          enumerable: true,\n          configurable: true\n        });\n        ShadowBlot.create = function (value) {\n          if (this.tagName == null) {\n            throw new Registry.ParchmentError('Blot definition missing tagName');\n          }\n          var node;\n          if (Array.isArray(this.tagName)) {\n            if (typeof value === 'string') {\n              value = value.toUpperCase();\n              if (parseInt(value).toString() === value) {\n                value = parseInt(value);\n              }\n            }\n            if (typeof value === 'number') {\n              node = document.createElement(this.tagName[value - 1]);\n            } else if (this.tagName.indexOf(value) > -1) {\n              node = document.createElement(value);\n            } else {\n              node = document.createElement(this.tagName[0]);\n            }\n          } else {\n            node = document.createElement(this.tagName);\n          }\n          if (this.className) {\n            node.classList.add(this.className);\n          }\n          return node;\n        };\n        ShadowBlot.prototype.attach = function () {\n          if (this.parent != null) {\n            this.scroll = this.parent.scroll;\n          }\n        };\n        ShadowBlot.prototype.clone = function () {\n          var domNode = this.domNode.cloneNode(false);\n          return Registry.create(domNode);\n        };\n        ShadowBlot.prototype.detach = function () {\n          if (this.parent != null) this.parent.removeChild(this);\n          // @ts-ignore\n          delete this.domNode[Registry.DATA_KEY];\n        };\n        ShadowBlot.prototype.deleteAt = function (index, length) {\n          var blot = this.isolate(index, length);\n          blot.remove();\n        };\n        ShadowBlot.prototype.formatAt = function (index, length, name, value) {\n          var blot = this.isolate(index, length);\n          if (Registry.query(name, Registry.Scope.BLOT) != null && value) {\n            blot.wrap(name, value);\n          } else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {\n            var parent_1 = Registry.create(this.statics.scope);\n            blot.wrap(parent_1);\n            parent_1.format(name, value);\n          }\n        };\n        ShadowBlot.prototype.insertAt = function (index, value, def) {\n          var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);\n          var ref = this.split(index);\n          this.parent.insertBefore(blot, ref);\n        };\n        ShadowBlot.prototype.insertInto = function (parentBlot, refBlot) {\n          if (refBlot === void 0) {\n            refBlot = null;\n          }\n          if (this.parent != null) {\n            this.parent.children.remove(this);\n          }\n          var refDomNode = null;\n          parentBlot.children.insertBefore(this, refBlot);\n          if (refBlot != null) {\n            refDomNode = refBlot.domNode;\n          }\n          if (this.domNode.parentNode != parentBlot.domNode || this.domNode.nextSibling != refDomNode) {\n            parentBlot.domNode.insertBefore(this.domNode, refDomNode);\n          }\n          this.parent = parentBlot;\n          this.attach();\n        };\n        ShadowBlot.prototype.isolate = function (index, length) {\n          var target = this.split(index);\n          target.split(length);\n          return target;\n        };\n        ShadowBlot.prototype.length = function () {\n          return 1;\n        };\n        ShadowBlot.prototype.offset = function (root) {\n          if (root === void 0) {\n            root = this.parent;\n          }\n          if (this.parent == null || this == root) return 0;\n          return this.parent.children.offset(this) + this.parent.offset(root);\n        };\n        ShadowBlot.prototype.optimize = function (context) {\n          // TODO clean up once we use WeakMap\n          // @ts-ignore\n          if (this.domNode[Registry.DATA_KEY] != null) {\n            // @ts-ignore\n            delete this.domNode[Registry.DATA_KEY].mutations;\n          }\n        };\n        ShadowBlot.prototype.remove = function () {\n          if (this.domNode.parentNode != null) {\n            this.domNode.parentNode.removeChild(this.domNode);\n          }\n          this.detach();\n        };\n        ShadowBlot.prototype.replace = function (target) {\n          if (target.parent == null) return;\n          target.parent.insertBefore(this, target.next);\n          target.remove();\n        };\n        ShadowBlot.prototype.replaceWith = function (name, value) {\n          var replacement = typeof name === 'string' ? Registry.create(name, value) : name;\n          replacement.replace(this);\n          return replacement;\n        };\n        ShadowBlot.prototype.split = function (index, force) {\n          return index === 0 ? this : this.next;\n        };\n        ShadowBlot.prototype.update = function (mutations, context) {\n          // Nothing to do by default\n        };\n        ShadowBlot.prototype.wrap = function (name, value) {\n          var wrapper = typeof name === 'string' ? Registry.create(name, value) : name;\n          if (this.parent != null) {\n            this.parent.insertBefore(wrapper, this.next);\n          }\n          wrapper.appendChild(this);\n          return wrapper;\n        };\n        ShadowBlot.blotName = 'abstract';\n        return ShadowBlot;\n      }();\n      exports.default = ShadowBlot;\n\n      /***/\n    }, /* 6 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var attributor_1 = __webpack_require__(1);\n      var class_1 = __webpack_require__(7);\n      var style_1 = __webpack_require__(8);\n      var Registry = __webpack_require__(0);\n      var AttributorStore = /** @class */function () {\n        function AttributorStore(domNode) {\n          this.attributes = {};\n          this.domNode = domNode;\n          this.build();\n        }\n        AttributorStore.prototype.attribute = function (attribute, value) {\n          // verb\n          if (value) {\n            if (attribute.add(this.domNode, value)) {\n              if (attribute.value(this.domNode) != null) {\n                this.attributes[attribute.attrName] = attribute;\n              } else {\n                delete this.attributes[attribute.attrName];\n              }\n            }\n          } else {\n            attribute.remove(this.domNode);\n            delete this.attributes[attribute.attrName];\n          }\n        };\n        AttributorStore.prototype.build = function () {\n          var _this = this;\n          this.attributes = {};\n          var attributes = attributor_1.default.keys(this.domNode);\n          var classes = class_1.default.keys(this.domNode);\n          var styles = style_1.default.keys(this.domNode);\n          attributes.concat(classes).concat(styles).forEach(function (name) {\n            var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);\n            if (attr instanceof attributor_1.default) {\n              _this.attributes[attr.attrName] = attr;\n            }\n          });\n        };\n        AttributorStore.prototype.copy = function (target) {\n          var _this = this;\n          Object.keys(this.attributes).forEach(function (key) {\n            var value = _this.attributes[key].value(_this.domNode);\n            target.format(key, value);\n          });\n        };\n        AttributorStore.prototype.move = function (target) {\n          var _this = this;\n          this.copy(target);\n          Object.keys(this.attributes).forEach(function (key) {\n            _this.attributes[key].remove(_this.domNode);\n          });\n          this.attributes = {};\n        };\n        AttributorStore.prototype.values = function () {\n          var _this = this;\n          return Object.keys(this.attributes).reduce(function (attributes, name) {\n            attributes[name] = _this.attributes[name].value(_this.domNode);\n            return attributes;\n          }, {});\n        };\n        return AttributorStore;\n      }();\n      exports.default = AttributorStore;\n\n      /***/\n    }, /* 7 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var attributor_1 = __webpack_require__(1);\n      function match(node, prefix) {\n        var className = node.getAttribute('class') || '';\n        return className.split(/\\s+/).filter(function (name) {\n          return name.indexOf(prefix + \"-\") === 0;\n        });\n      }\n      var ClassAttributor = /** @class */function (_super) {\n        __extends(ClassAttributor, _super);\n        function ClassAttributor() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ClassAttributor.keys = function (node) {\n          return (node.getAttribute('class') || '').split(/\\s+/).map(function (name) {\n            return name.split('-').slice(0, -1).join('-');\n          });\n        };\n        ClassAttributor.prototype.add = function (node, value) {\n          if (!this.canAdd(node, value)) return false;\n          this.remove(node);\n          node.classList.add(this.keyName + \"-\" + value);\n          return true;\n        };\n        ClassAttributor.prototype.remove = function (node) {\n          var matches = match(node, this.keyName);\n          matches.forEach(function (name) {\n            node.classList.remove(name);\n          });\n          if (node.classList.length === 0) {\n            node.removeAttribute('class');\n          }\n        };\n        ClassAttributor.prototype.value = function (node) {\n          var result = match(node, this.keyName)[0] || '';\n          var value = result.slice(this.keyName.length + 1); // +1 for hyphen\n          return this.canAdd(node, value) ? value : '';\n        };\n        return ClassAttributor;\n      }(attributor_1.default);\n      exports.default = ClassAttributor;\n\n      /***/\n    }, /* 8 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var attributor_1 = __webpack_require__(1);\n      function camelize(name) {\n        var parts = name.split('-');\n        var rest = parts.slice(1).map(function (part) {\n          return part[0].toUpperCase() + part.slice(1);\n        }).join('');\n        return parts[0] + rest;\n      }\n      var StyleAttributor = /** @class */function (_super) {\n        __extends(StyleAttributor, _super);\n        function StyleAttributor() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n        StyleAttributor.keys = function (node) {\n          return (node.getAttribute('style') || '').split(';').map(function (value) {\n            var arr = value.split(':');\n            return arr[0].trim();\n          });\n        };\n        StyleAttributor.prototype.add = function (node, value) {\n          if (!this.canAdd(node, value)) return false;\n          // @ts-ignore\n          node.style[camelize(this.keyName)] = value;\n          return true;\n        };\n        StyleAttributor.prototype.remove = function (node) {\n          // @ts-ignore\n          node.style[camelize(this.keyName)] = '';\n          if (!node.getAttribute('style')) {\n            node.removeAttribute('style');\n          }\n        };\n        StyleAttributor.prototype.value = function (node) {\n          // @ts-ignore\n          var value = node.style[camelize(this.keyName)];\n          return this.canAdd(node, value) ? value : '';\n        };\n        return StyleAttributor;\n      }(attributor_1.default);\n      exports.default = StyleAttributor;\n\n      /***/\n    }, /* 9 */\n    /***/function (module, exports, __webpack_require__) {\n      module.exports = __webpack_require__(10);\n\n      /***/\n    }, /* 10 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var container_1 = __webpack_require__(2);\n      var format_1 = __webpack_require__(3);\n      var leaf_1 = __webpack_require__(4);\n      var scroll_1 = __webpack_require__(12);\n      var inline_1 = __webpack_require__(13);\n      var block_1 = __webpack_require__(14);\n      var embed_1 = __webpack_require__(15);\n      var text_1 = __webpack_require__(16);\n      var attributor_1 = __webpack_require__(1);\n      var class_1 = __webpack_require__(7);\n      var style_1 = __webpack_require__(8);\n      var store_1 = __webpack_require__(6);\n      var Registry = __webpack_require__(0);\n      var Parchment = {\n        Scope: Registry.Scope,\n        create: Registry.create,\n        find: Registry.find,\n        query: Registry.query,\n        register: Registry.register,\n        Container: container_1.default,\n        Format: format_1.default,\n        Leaf: leaf_1.default,\n        Embed: embed_1.default,\n        Scroll: scroll_1.default,\n        Block: block_1.default,\n        Inline: inline_1.default,\n        Text: text_1.default,\n        Attributor: {\n          Attribute: attributor_1.default,\n          Class: class_1.default,\n          Style: style_1.default,\n          Store: store_1.default\n        }\n      };\n      exports.default = Parchment;\n\n      /***/\n    }, /* 11 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var LinkedList = /** @class */function () {\n        function LinkedList() {\n          this.head = this.tail = null;\n          this.length = 0;\n        }\n        LinkedList.prototype.append = function () {\n          var nodes = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n          }\n          this.insertBefore(nodes[0], null);\n          if (nodes.length > 1) {\n            this.append.apply(this, nodes.slice(1));\n          }\n        };\n        LinkedList.prototype.contains = function (node) {\n          var cur,\n            next = this.iterator();\n          while (cur = next()) {\n            if (cur === node) return true;\n          }\n          return false;\n        };\n        LinkedList.prototype.insertBefore = function (node, refNode) {\n          if (!node) return;\n          node.next = refNode;\n          if (refNode != null) {\n            node.prev = refNode.prev;\n            if (refNode.prev != null) {\n              refNode.prev.next = node;\n            }\n            refNode.prev = node;\n            if (refNode === this.head) {\n              this.head = node;\n            }\n          } else if (this.tail != null) {\n            this.tail.next = node;\n            node.prev = this.tail;\n            this.tail = node;\n          } else {\n            node.prev = null;\n            this.head = this.tail = node;\n          }\n          this.length += 1;\n        };\n        LinkedList.prototype.offset = function (target) {\n          var index = 0,\n            cur = this.head;\n          while (cur != null) {\n            if (cur === target) return index;\n            index += cur.length();\n            cur = cur.next;\n          }\n          return -1;\n        };\n        LinkedList.prototype.remove = function (node) {\n          if (!this.contains(node)) return;\n          if (node.prev != null) node.prev.next = node.next;\n          if (node.next != null) node.next.prev = node.prev;\n          if (node === this.head) this.head = node.next;\n          if (node === this.tail) this.tail = node.prev;\n          this.length -= 1;\n        };\n        LinkedList.prototype.iterator = function (curNode) {\n          if (curNode === void 0) {\n            curNode = this.head;\n          }\n          // TODO use yield when we can\n          return function () {\n            var ret = curNode;\n            if (curNode != null) curNode = curNode.next;\n            return ret;\n          };\n        };\n        LinkedList.prototype.find = function (index, inclusive) {\n          if (inclusive === void 0) {\n            inclusive = false;\n          }\n          var cur,\n            next = this.iterator();\n          while (cur = next()) {\n            var length_1 = cur.length();\n            if (index < length_1 || inclusive && index === length_1 && (cur.next == null || cur.next.length() !== 0)) {\n              return [cur, index];\n            }\n            index -= length_1;\n          }\n          return [null, 0];\n        };\n        LinkedList.prototype.forEach = function (callback) {\n          var cur,\n            next = this.iterator();\n          while (cur = next()) {\n            callback(cur);\n          }\n        };\n        LinkedList.prototype.forEachAt = function (index, length, callback) {\n          if (length <= 0) return;\n          var _a = this.find(index),\n            startNode = _a[0],\n            offset = _a[1];\n          var cur,\n            curIndex = index - offset,\n            next = this.iterator(startNode);\n          while ((cur = next()) && curIndex < index + length) {\n            var curLength = cur.length();\n            if (index > curIndex) {\n              callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));\n            } else {\n              callback(cur, 0, Math.min(curLength, index + length - curIndex));\n            }\n            curIndex += curLength;\n          }\n        };\n        LinkedList.prototype.map = function (callback) {\n          return this.reduce(function (memo, cur) {\n            memo.push(callback(cur));\n            return memo;\n          }, []);\n        };\n        LinkedList.prototype.reduce = function (callback, memo) {\n          var cur,\n            next = this.iterator();\n          while (cur = next()) {\n            memo = callback(memo, cur);\n          }\n          return memo;\n        };\n        return LinkedList;\n      }();\n      exports.default = LinkedList;\n\n      /***/\n    }, /* 12 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var container_1 = __webpack_require__(2);\n      var Registry = __webpack_require__(0);\n      var OBSERVER_CONFIG = {\n        attributes: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true\n      };\n      var MAX_OPTIMIZE_ITERATIONS = 100;\n      var ScrollBlot = /** @class */function (_super) {\n        __extends(ScrollBlot, _super);\n        function ScrollBlot(node) {\n          var _this = _super.call(this, node) || this;\n          _this.scroll = _this;\n          _this.observer = new MutationObserver(function (mutations) {\n            _this.update(mutations);\n          });\n          _this.observer.observe(_this.domNode, OBSERVER_CONFIG);\n          _this.attach();\n          return _this;\n        }\n        ScrollBlot.prototype.detach = function () {\n          _super.prototype.detach.call(this);\n          this.observer.disconnect();\n        };\n        ScrollBlot.prototype.deleteAt = function (index, length) {\n          this.update();\n          if (index === 0 && length === this.length()) {\n            this.children.forEach(function (child) {\n              child.remove();\n            });\n          } else {\n            _super.prototype.deleteAt.call(this, index, length);\n          }\n        };\n        ScrollBlot.prototype.formatAt = function (index, length, name, value) {\n          this.update();\n          _super.prototype.formatAt.call(this, index, length, name, value);\n        };\n        ScrollBlot.prototype.insertAt = function (index, value, def) {\n          this.update();\n          _super.prototype.insertAt.call(this, index, value, def);\n        };\n        ScrollBlot.prototype.optimize = function (mutations, context) {\n          var _this = this;\n          if (mutations === void 0) {\n            mutations = [];\n          }\n          if (context === void 0) {\n            context = {};\n          }\n          _super.prototype.optimize.call(this, context);\n          // We must modify mutations directly, cannot make copy and then modify\n          var records = [].slice.call(this.observer.takeRecords());\n          // Array.push currently seems to be implemented by a non-tail recursive function\n          // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n          while (records.length > 0) mutations.push(records.pop());\n          // TODO use WeakMap\n          var mark = function (blot, markParent) {\n            if (markParent === void 0) {\n              markParent = true;\n            }\n            if (blot == null || blot === _this) return;\n            if (blot.domNode.parentNode == null) return;\n            // @ts-ignore\n            if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n              // @ts-ignore\n              blot.domNode[Registry.DATA_KEY].mutations = [];\n            }\n            if (markParent) mark(blot.parent);\n          };\n          var optimize = function (blot) {\n            // Post-order traversal\n            if (\n            // @ts-ignore\n            blot.domNode[Registry.DATA_KEY] == null ||\n            // @ts-ignore\n            blot.domNode[Registry.DATA_KEY].mutations == null) {\n              return;\n            }\n            if (blot instanceof container_1.default) {\n              blot.children.forEach(optimize);\n            }\n            blot.optimize(context);\n          };\n          var remaining = mutations;\n          for (var i = 0; remaining.length > 0; i += 1) {\n            if (i >= MAX_OPTIMIZE_ITERATIONS) {\n              throw new Error('[Parchment] Maximum optimize iterations reached');\n            }\n            remaining.forEach(function (mutation) {\n              var blot = Registry.find(mutation.target, true);\n              if (blot == null) return;\n              if (blot.domNode === mutation.target) {\n                if (mutation.type === 'childList') {\n                  mark(Registry.find(mutation.previousSibling, false));\n                  [].forEach.call(mutation.addedNodes, function (node) {\n                    var child = Registry.find(node, false);\n                    mark(child, false);\n                    if (child instanceof container_1.default) {\n                      child.children.forEach(function (grandChild) {\n                        mark(grandChild, false);\n                      });\n                    }\n                  });\n                } else if (mutation.type === 'attributes') {\n                  mark(blot.prev);\n                }\n              }\n              mark(blot);\n            });\n            this.children.forEach(optimize);\n            remaining = [].slice.call(this.observer.takeRecords());\n            records = remaining.slice();\n            while (records.length > 0) mutations.push(records.pop());\n          }\n        };\n        ScrollBlot.prototype.update = function (mutations, context) {\n          var _this = this;\n          if (context === void 0) {\n            context = {};\n          }\n          mutations = mutations || this.observer.takeRecords();\n          // TODO use WeakMap\n          mutations.map(function (mutation) {\n            var blot = Registry.find(mutation.target, true);\n            if (blot == null) return null;\n            // @ts-ignore\n            if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n              // @ts-ignore\n              blot.domNode[Registry.DATA_KEY].mutations = [mutation];\n              return blot;\n            } else {\n              // @ts-ignore\n              blot.domNode[Registry.DATA_KEY].mutations.push(mutation);\n              return null;\n            }\n          }).forEach(function (blot) {\n            if (blot == null || blot === _this ||\n            //@ts-ignore\n            blot.domNode[Registry.DATA_KEY] == null) return;\n            // @ts-ignore\n            blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);\n          });\n          // @ts-ignore\n          if (this.domNode[Registry.DATA_KEY].mutations != null) {\n            // @ts-ignore\n            _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);\n          }\n          this.optimize(mutations, context);\n        };\n        ScrollBlot.blotName = 'scroll';\n        ScrollBlot.defaultChild = 'block';\n        ScrollBlot.scope = Registry.Scope.BLOCK_BLOT;\n        ScrollBlot.tagName = 'DIV';\n        return ScrollBlot;\n      }(container_1.default);\n      exports.default = ScrollBlot;\n\n      /***/\n    }, /* 13 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var format_1 = __webpack_require__(3);\n      var Registry = __webpack_require__(0);\n      // Shallow object comparison\n      function isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) return false;\n        // @ts-ignore\n        for (var prop in obj1) {\n          // @ts-ignore\n          if (obj1[prop] !== obj2[prop]) return false;\n        }\n        return true;\n      }\n      var InlineBlot = /** @class */function (_super) {\n        __extends(InlineBlot, _super);\n        function InlineBlot() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n        InlineBlot.formats = function (domNode) {\n          if (domNode.tagName === InlineBlot.tagName) return undefined;\n          return _super.formats.call(this, domNode);\n        };\n        InlineBlot.prototype.format = function (name, value) {\n          var _this = this;\n          if (name === this.statics.blotName && !value) {\n            this.children.forEach(function (child) {\n              if (!(child instanceof format_1.default)) {\n                child = child.wrap(InlineBlot.blotName, true);\n              }\n              _this.attributes.copy(child);\n            });\n            this.unwrap();\n          } else {\n            _super.prototype.format.call(this, name, value);\n          }\n        };\n        InlineBlot.prototype.formatAt = function (index, length, name, value) {\n          if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {\n            var blot = this.isolate(index, length);\n            blot.format(name, value);\n          } else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n          }\n        };\n        InlineBlot.prototype.optimize = function (context) {\n          _super.prototype.optimize.call(this, context);\n          var formats = this.formats();\n          if (Object.keys(formats).length === 0) {\n            return this.unwrap(); // unformatted span\n          }\n\n          var next = this.next;\n          if (next instanceof InlineBlot && next.prev === this && isEqual(formats, next.formats())) {\n            next.moveChildren(this);\n            next.remove();\n          }\n        };\n        InlineBlot.blotName = 'inline';\n        InlineBlot.scope = Registry.Scope.INLINE_BLOT;\n        InlineBlot.tagName = 'SPAN';\n        return InlineBlot;\n      }(format_1.default);\n      exports.default = InlineBlot;\n\n      /***/\n    }, /* 14 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var format_1 = __webpack_require__(3);\n      var Registry = __webpack_require__(0);\n      var BlockBlot = /** @class */function (_super) {\n        __extends(BlockBlot, _super);\n        function BlockBlot() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n        BlockBlot.formats = function (domNode) {\n          var tagName = Registry.query(BlockBlot.blotName).tagName;\n          if (domNode.tagName === tagName) return undefined;\n          return _super.formats.call(this, domNode);\n        };\n        BlockBlot.prototype.format = function (name, value) {\n          if (Registry.query(name, Registry.Scope.BLOCK) == null) {\n            return;\n          } else if (name === this.statics.blotName && !value) {\n            this.replaceWith(BlockBlot.blotName);\n          } else {\n            _super.prototype.format.call(this, name, value);\n          }\n        };\n        BlockBlot.prototype.formatAt = function (index, length, name, value) {\n          if (Registry.query(name, Registry.Scope.BLOCK) != null) {\n            this.format(name, value);\n          } else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n          }\n        };\n        BlockBlot.prototype.insertAt = function (index, value, def) {\n          if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {\n            // Insert text or inline\n            _super.prototype.insertAt.call(this, index, value, def);\n          } else {\n            var after = this.split(index);\n            var blot = Registry.create(value, def);\n            after.parent.insertBefore(blot, after);\n          }\n        };\n        BlockBlot.prototype.update = function (mutations, context) {\n          if (navigator.userAgent.match(/Trident/)) {\n            this.build();\n          } else {\n            _super.prototype.update.call(this, mutations, context);\n          }\n        };\n        BlockBlot.blotName = 'block';\n        BlockBlot.scope = Registry.Scope.BLOCK_BLOT;\n        BlockBlot.tagName = 'P';\n        return BlockBlot;\n      }(format_1.default);\n      exports.default = BlockBlot;\n\n      /***/\n    }, /* 15 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var leaf_1 = __webpack_require__(4);\n      var EmbedBlot = /** @class */function (_super) {\n        __extends(EmbedBlot, _super);\n        function EmbedBlot() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n        EmbedBlot.formats = function (domNode) {\n          return undefined;\n        };\n        EmbedBlot.prototype.format = function (name, value) {\n          // super.formatAt wraps, which is what we want in general,\n          // but this allows subclasses to overwrite for formats\n          // that just apply to particular embeds\n          _super.prototype.formatAt.call(this, 0, this.length(), name, value);\n        };\n        EmbedBlot.prototype.formatAt = function (index, length, name, value) {\n          if (index === 0 && length === this.length()) {\n            this.format(name, value);\n          } else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n          }\n        };\n        EmbedBlot.prototype.formats = function () {\n          return this.statics.formats(this.domNode);\n        };\n        return EmbedBlot;\n      }(leaf_1.default);\n      exports.default = EmbedBlot;\n\n      /***/\n    }, /* 16 */\n    /***/function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var leaf_1 = __webpack_require__(4);\n      var Registry = __webpack_require__(0);\n      var TextBlot = /** @class */function (_super) {\n        __extends(TextBlot, _super);\n        function TextBlot(node) {\n          var _this = _super.call(this, node) || this;\n          _this.text = _this.statics.value(_this.domNode);\n          return _this;\n        }\n        TextBlot.create = function (value) {\n          return document.createTextNode(value);\n        };\n        TextBlot.value = function (domNode) {\n          var text = domNode.data;\n          // @ts-ignore\n          if (text['normalize']) text = text['normalize']();\n          return text;\n        };\n        TextBlot.prototype.deleteAt = function (index, length) {\n          this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);\n        };\n        TextBlot.prototype.index = function (node, offset) {\n          if (this.domNode === node) {\n            return offset;\n          }\n          return -1;\n        };\n        TextBlot.prototype.insertAt = function (index, value, def) {\n          if (def == null) {\n            this.text = this.text.slice(0, index) + value + this.text.slice(index);\n            this.domNode.data = this.text;\n          } else {\n            _super.prototype.insertAt.call(this, index, value, def);\n          }\n        };\n        TextBlot.prototype.length = function () {\n          return this.text.length;\n        };\n        TextBlot.prototype.optimize = function (context) {\n          _super.prototype.optimize.call(this, context);\n          this.text = this.statics.value(this.domNode);\n          if (this.text.length === 0) {\n            this.remove();\n          } else if (this.next instanceof TextBlot && this.next.prev === this) {\n            this.insertAt(this.length(), this.next.value());\n            this.next.remove();\n          }\n        };\n        TextBlot.prototype.position = function (index, inclusive) {\n          if (inclusive === void 0) {\n            inclusive = false;\n          }\n          return [this.domNode, index];\n        };\n        TextBlot.prototype.split = function (index, force) {\n          if (force === void 0) {\n            force = false;\n          }\n          if (!force) {\n            if (index === 0) return this;\n            if (index === this.length()) return this.next;\n          }\n          var after = Registry.create(this.domNode.splitText(index));\n          this.parent.insertBefore(after, this.next);\n          this.text = this.statics.value(this.domNode);\n          return after;\n        };\n        TextBlot.prototype.update = function (mutations, context) {\n          var _this = this;\n          if (mutations.some(function (mutation) {\n            return mutation.type === 'characterData' && mutation.target === _this.domNode;\n          })) {\n            this.text = this.statics.value(this.domNode);\n          }\n        };\n        TextBlot.prototype.value = function () {\n          return this.text;\n        };\n        TextBlot.blotName = 'text';\n        TextBlot.scope = Registry.Scope.INLINE_BLOT;\n        return TextBlot;\n      }(leaf_1.default);\n      exports.default = TextBlot;\n\n      /***/\n    }\n    /******/])\n  );\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","value","ParchmentError","_super","message","_this","Error","attributes","classes","tags","types","DATA_KEY","Scope","input","match","query","BlotClass","node","Node","TEXT_NODE","find","bubble","blot","parentNode","scope","ANY","Text","LEVEL","BLOCK","INLINE","HTMLElement","names","getAttribute","split","tagName","TYPE","register","Definitions","_i","arguments","length","map","Definition","blotName","attrName","keyName","className","isArray","toUpperCase","tagNames","forEach","tag","Registry","Attributor","options","attributeBit","ATTRIBUTE","whitelist","keys","item","add","canAdd","setAttribute","BLOT","indexOf","replace","remove","removeAttribute","default","linked_list_1","shadow_1","ContainerBlot","domNode","build","appendChild","other","insertBefore","attach","children","child","slice","childNodes","reverse","makeBlot","head","undefined","err","deleteAt","index","forEachAt","offset","descendant","criteria","_a","descendants","Number","MAX_VALUE","lengthLeft","push","concat","detach","formatAt","insertAt","def","childBlot","refBlot","statics","allowedChildren","some","insertInto","reduce","memo","moveChildren","targetParent","refNode","optimize","context","defaultChild","path","inclusive","position","removeChild","target","force","next","after","clone","parent","unwrap","update","mutations","addedNodes","removedNodes","mutation","type","apply","document","body","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","filter","sort","a","DOCUMENT_POSITION_FOLLOWING","nextSibling","e","replaceChild","attributor_1","store_1","container_1","FormatBlot","formats","toLowerCase","format","attribute","replaceWith","values","replacement","copy","wrap","wrapper","move","LeafBlot","Math","min","INLINE_BLOT","ShadowBlot","parseInt","toString","createElement","classList","scroll","cloneNode","isolate","parent_1","ref","parentBlot","refDomNode","class_1","style_1","AttributorStore","styles","attr","key","prefix","ClassAttributor","join","matches","result","camelize","parts","rest","part","StyleAttributor","arr","trim","style","format_1","leaf_1","scroll_1","inline_1","block_1","embed_1","text_1","Parchment","Container","Format","Leaf","Embed","Scroll","Block","Inline","Attribute","Class","Style","Store","LinkedList","tail","append","nodes","contains","cur","iterator","prev","curNode","ret","length_1","callback","startNode","curIndex","curLength","OBSERVER_CONFIG","characterData","characterDataOldValue","childList","subtree","MAX_OPTIMIZE_ITERATIONS","ScrollBlot","observer","MutationObserver","observe","disconnect","records","takeRecords","pop","mark","markParent","remaining","previousSibling","grandChild","BLOCK_BLOT","isEqual","obj1","obj2","prop","InlineBlot","BlockBlot","navigator","userAgent","EmbedBlot","TextBlot","text","createTextNode","data","splitText"],"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3c334e19bc1efdeb80ab","webpack:///src/registry.ts","webpack:///src/attributor/attributor.ts","webpack:///src/blot/abstract/container.ts","webpack:///src/blot/abstract/format.ts","webpack:///src/blot/abstract/leaf.ts","webpack:///src/blot/abstract/shadow.ts","webpack:///src/attributor/store.ts","webpack:///src/attributor/class.ts","webpack:///src/attributor/style.ts","webpack:///src/parchment.ts","webpack:///src/collection/linked-list.ts","webpack:///src/blot/scroll.ts","webpack:///src/blot/inline.ts","webpack:///src/blot/block.ts","webpack:///src/blot/embed.ts","webpack:///src/blot/text.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Parchment\"] = factory();\n\telse\n\t\troot[\"Parchment\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3c334e19bc1efdeb80ab","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ParchmentError = /** @class */ (function (_super) {\n    __extends(ParchmentError, _super);\n    function ParchmentError(message) {\n        var _this = this;\n        message = '[Parchment] ' + message;\n        _this = _super.call(this, message) || this;\n        _this.message = message;\n        _this.name = _this.constructor.name;\n        return _this;\n    }\n    return ParchmentError;\n}(Error));\nexports.ParchmentError = ParchmentError;\nvar attributes = {};\nvar classes = {};\nvar tags = {};\nvar types = {};\nexports.DATA_KEY = '__blot';\nvar Scope;\n(function (Scope) {\n    Scope[Scope[\"TYPE\"] = 3] = \"TYPE\";\n    Scope[Scope[\"LEVEL\"] = 12] = \"LEVEL\";\n    Scope[Scope[\"ATTRIBUTE\"] = 13] = \"ATTRIBUTE\";\n    Scope[Scope[\"BLOT\"] = 14] = \"BLOT\";\n    Scope[Scope[\"INLINE\"] = 7] = \"INLINE\";\n    Scope[Scope[\"BLOCK\"] = 11] = \"BLOCK\";\n    Scope[Scope[\"BLOCK_BLOT\"] = 10] = \"BLOCK_BLOT\";\n    Scope[Scope[\"INLINE_BLOT\"] = 6] = \"INLINE_BLOT\";\n    Scope[Scope[\"BLOCK_ATTRIBUTE\"] = 9] = \"BLOCK_ATTRIBUTE\";\n    Scope[Scope[\"INLINE_ATTRIBUTE\"] = 5] = \"INLINE_ATTRIBUTE\";\n    Scope[Scope[\"ANY\"] = 15] = \"ANY\";\n})(Scope = exports.Scope || (exports.Scope = {}));\nfunction create(input, value) {\n    var match = query(input);\n    if (match == null) {\n        throw new ParchmentError(\"Unable to create \" + input + \" blot\");\n    }\n    var BlotClass = match;\n    var node = \n    // @ts-ignore\n    input instanceof Node || input['nodeType'] === Node.TEXT_NODE ? input : BlotClass.create(value);\n    return new BlotClass(node, value);\n}\nexports.create = create;\nfunction find(node, bubble) {\n    if (bubble === void 0) { bubble = false; }\n    if (node == null)\n        return null;\n    // @ts-ignore\n    if (node[exports.DATA_KEY] != null)\n        return node[exports.DATA_KEY].blot;\n    if (bubble)\n        return find(node.parentNode, bubble);\n    return null;\n}\nexports.find = find;\nfunction query(query, scope) {\n    if (scope === void 0) { scope = Scope.ANY; }\n    var match;\n    if (typeof query === 'string') {\n        match = types[query] || attributes[query];\n        // @ts-ignore\n    }\n    else if (query instanceof Text || query['nodeType'] === Node.TEXT_NODE) {\n        match = types['text'];\n    }\n    else if (typeof query === 'number') {\n        if (query & Scope.LEVEL & Scope.BLOCK) {\n            match = types['block'];\n        }\n        else if (query & Scope.LEVEL & Scope.INLINE) {\n            match = types['inline'];\n        }\n    }\n    else if (query instanceof HTMLElement) {\n        var names = (query.getAttribute('class') || '').split(/\\s+/);\n        for (var i in names) {\n            match = classes[names[i]];\n            if (match)\n                break;\n        }\n        match = match || tags[query.tagName];\n    }\n    if (match == null)\n        return null;\n    // @ts-ignore\n    if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope)\n        return match;\n    return null;\n}\nexports.query = query;\nfunction register() {\n    var Definitions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        Definitions[_i] = arguments[_i];\n    }\n    if (Definitions.length > 1) {\n        return Definitions.map(function (d) {\n            return register(d);\n        });\n    }\n    var Definition = Definitions[0];\n    if (typeof Definition.blotName !== 'string' && typeof Definition.attrName !== 'string') {\n        throw new ParchmentError('Invalid definition');\n    }\n    else if (Definition.blotName === 'abstract') {\n        throw new ParchmentError('Cannot register abstract class');\n    }\n    types[Definition.blotName || Definition.attrName] = Definition;\n    if (typeof Definition.keyName === 'string') {\n        attributes[Definition.keyName] = Definition;\n    }\n    else {\n        if (Definition.className != null) {\n            classes[Definition.className] = Definition;\n        }\n        if (Definition.tagName != null) {\n            if (Array.isArray(Definition.tagName)) {\n                Definition.tagName = Definition.tagName.map(function (tagName) {\n                    return tagName.toUpperCase();\n                });\n            }\n            else {\n                Definition.tagName = Definition.tagName.toUpperCase();\n            }\n            var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];\n            tagNames.forEach(function (tag) {\n                if (tags[tag] == null || Definition.className == null) {\n                    tags[tag] = Definition;\n                }\n            });\n        }\n    }\n    return Definition;\n}\nexports.register = register;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/registry.ts\n// module id = 0\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Registry = require(\"../registry\");\nvar Attributor = /** @class */ (function () {\n    function Attributor(attrName, keyName, options) {\n        if (options === void 0) { options = {}; }\n        this.attrName = attrName;\n        this.keyName = keyName;\n        var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;\n        if (options.scope != null) {\n            // Ignore type bits, force attribute bit\n            this.scope = (options.scope & Registry.Scope.LEVEL) | attributeBit;\n        }\n        else {\n            this.scope = Registry.Scope.ATTRIBUTE;\n        }\n        if (options.whitelist != null)\n            this.whitelist = options.whitelist;\n    }\n    Attributor.keys = function (node) {\n        return [].map.call(node.attributes, function (item) {\n            return item.name;\n        });\n    };\n    Attributor.prototype.add = function (node, value) {\n        if (!this.canAdd(node, value))\n            return false;\n        node.setAttribute(this.keyName, value);\n        return true;\n    };\n    Attributor.prototype.canAdd = function (node, value) {\n        var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));\n        if (match == null)\n            return false;\n        if (this.whitelist == null)\n            return true;\n        if (typeof value === 'string') {\n            return this.whitelist.indexOf(value.replace(/[\"']/g, '')) > -1;\n        }\n        else {\n            return this.whitelist.indexOf(value) > -1;\n        }\n    };\n    Attributor.prototype.remove = function (node) {\n        node.removeAttribute(this.keyName);\n    };\n    Attributor.prototype.value = function (node) {\n        var value = node.getAttribute(this.keyName);\n        if (this.canAdd(node, value) && value) {\n            return value;\n        }\n        return '';\n    };\n    return Attributor;\n}());\nexports.default = Attributor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/attributor/attributor.ts\n// module id = 1\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar linked_list_1 = require(\"../../collection/linked-list\");\nvar shadow_1 = require(\"./shadow\");\nvar Registry = require(\"../../registry\");\nvar ContainerBlot = /** @class */ (function (_super) {\n    __extends(ContainerBlot, _super);\n    function ContainerBlot(domNode) {\n        var _this = _super.call(this, domNode) || this;\n        _this.build();\n        return _this;\n    }\n    ContainerBlot.prototype.appendChild = function (other) {\n        this.insertBefore(other);\n    };\n    ContainerBlot.prototype.attach = function () {\n        _super.prototype.attach.call(this);\n        this.children.forEach(function (child) {\n            child.attach();\n        });\n    };\n    ContainerBlot.prototype.build = function () {\n        var _this = this;\n        this.children = new linked_list_1.default();\n        // Need to be reversed for if DOM nodes already in order\n        [].slice\n            .call(this.domNode.childNodes)\n            .reverse()\n            .forEach(function (node) {\n            try {\n                var child = makeBlot(node);\n                _this.insertBefore(child, _this.children.head || undefined);\n            }\n            catch (err) {\n                if (err instanceof Registry.ParchmentError)\n                    return;\n                else\n                    throw err;\n            }\n        });\n    };\n    ContainerBlot.prototype.deleteAt = function (index, length) {\n        if (index === 0 && length === this.length()) {\n            return this.remove();\n        }\n        this.children.forEachAt(index, length, function (child, offset, length) {\n            child.deleteAt(offset, length);\n        });\n    };\n    ContainerBlot.prototype.descendant = function (criteria, index) {\n        var _a = this.children.find(index), child = _a[0], offset = _a[1];\n        if ((criteria.blotName == null && criteria(child)) ||\n            (criteria.blotName != null && child instanceof criteria)) {\n            return [child, offset];\n        }\n        else if (child instanceof ContainerBlot) {\n            return child.descendant(criteria, offset);\n        }\n        else {\n            return [null, -1];\n        }\n    };\n    ContainerBlot.prototype.descendants = function (criteria, index, length) {\n        if (index === void 0) { index = 0; }\n        if (length === void 0) { length = Number.MAX_VALUE; }\n        var descendants = [];\n        var lengthLeft = length;\n        this.children.forEachAt(index, length, function (child, index, length) {\n            if ((criteria.blotName == null && criteria(child)) ||\n                (criteria.blotName != null && child instanceof criteria)) {\n                descendants.push(child);\n            }\n            if (child instanceof ContainerBlot) {\n                descendants = descendants.concat(child.descendants(criteria, index, lengthLeft));\n            }\n            lengthLeft -= length;\n        });\n        return descendants;\n    };\n    ContainerBlot.prototype.detach = function () {\n        this.children.forEach(function (child) {\n            child.detach();\n        });\n        _super.prototype.detach.call(this);\n    };\n    ContainerBlot.prototype.formatAt = function (index, length, name, value) {\n        this.children.forEachAt(index, length, function (child, offset, length) {\n            child.formatAt(offset, length, name, value);\n        });\n    };\n    ContainerBlot.prototype.insertAt = function (index, value, def) {\n        var _a = this.children.find(index), child = _a[0], offset = _a[1];\n        if (child) {\n            child.insertAt(offset, value, def);\n        }\n        else {\n            var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);\n            this.appendChild(blot);\n        }\n    };\n    ContainerBlot.prototype.insertBefore = function (childBlot, refBlot) {\n        if (this.statics.allowedChildren != null &&\n            !this.statics.allowedChildren.some(function (child) {\n                return childBlot instanceof child;\n            })) {\n            throw new Registry.ParchmentError(\"Cannot insert \" + childBlot.statics.blotName + \" into \" + this.statics.blotName);\n        }\n        childBlot.insertInto(this, refBlot);\n    };\n    ContainerBlot.prototype.length = function () {\n        return this.children.reduce(function (memo, child) {\n            return memo + child.length();\n        }, 0);\n    };\n    ContainerBlot.prototype.moveChildren = function (targetParent, refNode) {\n        this.children.forEach(function (child) {\n            targetParent.insertBefore(child, refNode);\n        });\n    };\n    ContainerBlot.prototype.optimize = function (context) {\n        _super.prototype.optimize.call(this, context);\n        if (this.children.length === 0) {\n            if (this.statics.defaultChild != null) {\n                var child = Registry.create(this.statics.defaultChild);\n                this.appendChild(child);\n                child.optimize(context);\n            }\n            else {\n                this.remove();\n            }\n        }\n    };\n    ContainerBlot.prototype.path = function (index, inclusive) {\n        if (inclusive === void 0) { inclusive = false; }\n        var _a = this.children.find(index, inclusive), child = _a[0], offset = _a[1];\n        var position = [[this, index]];\n        if (child instanceof ContainerBlot) {\n            return position.concat(child.path(offset, inclusive));\n        }\n        else if (child != null) {\n            position.push([child, offset]);\n        }\n        return position;\n    };\n    ContainerBlot.prototype.removeChild = function (child) {\n        this.children.remove(child);\n    };\n    ContainerBlot.prototype.replace = function (target) {\n        if (target instanceof ContainerBlot) {\n            target.moveChildren(this);\n        }\n        _super.prototype.replace.call(this, target);\n    };\n    ContainerBlot.prototype.split = function (index, force) {\n        if (force === void 0) { force = false; }\n        if (!force) {\n            if (index === 0)\n                return this;\n            if (index === this.length())\n                return this.next;\n        }\n        var after = this.clone();\n        this.parent.insertBefore(after, this.next);\n        this.children.forEachAt(index, this.length(), function (child, offset, length) {\n            child = child.split(offset, force);\n            after.appendChild(child);\n        });\n        return after;\n    };\n    ContainerBlot.prototype.unwrap = function () {\n        this.moveChildren(this.parent, this.next);\n        this.remove();\n    };\n    ContainerBlot.prototype.update = function (mutations, context) {\n        var _this = this;\n        var addedNodes = [];\n        var removedNodes = [];\n        mutations.forEach(function (mutation) {\n            if (mutation.target === _this.domNode && mutation.type === 'childList') {\n                addedNodes.push.apply(addedNodes, mutation.addedNodes);\n                removedNodes.push.apply(removedNodes, mutation.removedNodes);\n            }\n        });\n        removedNodes.forEach(function (node) {\n            // Check node has actually been removed\n            // One exception is Chrome does not immediately remove IFRAMEs\n            // from DOM but MutationRecord is correct in its reported removal\n            if (node.parentNode != null &&\n                // @ts-ignore\n                node.tagName !== 'IFRAME' &&\n                document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                return;\n            }\n            var blot = Registry.find(node);\n            if (blot == null)\n                return;\n            if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {\n                blot.detach();\n            }\n        });\n        addedNodes\n            .filter(function (node) {\n            return node.parentNode == _this.domNode;\n        })\n            .sort(function (a, b) {\n            if (a === b)\n                return 0;\n            if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n                return 1;\n            }\n            return -1;\n        })\n            .forEach(function (node) {\n            var refBlot = null;\n            if (node.nextSibling != null) {\n                refBlot = Registry.find(node.nextSibling);\n            }\n            var blot = makeBlot(node);\n            if (blot.next != refBlot || blot.next == null) {\n                if (blot.parent != null) {\n                    blot.parent.removeChild(_this);\n                }\n                _this.insertBefore(blot, refBlot || undefined);\n            }\n        });\n    };\n    return ContainerBlot;\n}(shadow_1.default));\nfunction makeBlot(node) {\n    var blot = Registry.find(node);\n    if (blot == null) {\n        try {\n            blot = Registry.create(node);\n        }\n        catch (e) {\n            blot = Registry.create(Registry.Scope.INLINE);\n            [].slice.call(node.childNodes).forEach(function (child) {\n                // @ts-ignore\n                blot.domNode.appendChild(child);\n            });\n            if (node.parentNode) {\n                node.parentNode.replaceChild(blot.domNode, node);\n            }\n            blot.attach();\n        }\n    }\n    return blot;\n}\nexports.default = ContainerBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/abstract/container.ts\n// module id = 2\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = require(\"../../attributor/attributor\");\nvar store_1 = require(\"../../attributor/store\");\nvar container_1 = require(\"./container\");\nvar Registry = require(\"../../registry\");\nvar FormatBlot = /** @class */ (function (_super) {\n    __extends(FormatBlot, _super);\n    function FormatBlot(domNode) {\n        var _this = _super.call(this, domNode) || this;\n        _this.attributes = new store_1.default(_this.domNode);\n        return _this;\n    }\n    FormatBlot.formats = function (domNode) {\n        if (typeof this.tagName === 'string') {\n            return true;\n        }\n        else if (Array.isArray(this.tagName)) {\n            return domNode.tagName.toLowerCase();\n        }\n        return undefined;\n    };\n    FormatBlot.prototype.format = function (name, value) {\n        var format = Registry.query(name);\n        if (format instanceof attributor_1.default) {\n            this.attributes.attribute(format, value);\n        }\n        else if (value) {\n            if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {\n                this.replaceWith(name, value);\n            }\n        }\n    };\n    FormatBlot.prototype.formats = function () {\n        var formats = this.attributes.values();\n        var format = this.statics.formats(this.domNode);\n        if (format != null) {\n            formats[this.statics.blotName] = format;\n        }\n        return formats;\n    };\n    FormatBlot.prototype.replaceWith = function (name, value) {\n        var replacement = _super.prototype.replaceWith.call(this, name, value);\n        this.attributes.copy(replacement);\n        return replacement;\n    };\n    FormatBlot.prototype.update = function (mutations, context) {\n        var _this = this;\n        _super.prototype.update.call(this, mutations, context);\n        if (mutations.some(function (mutation) {\n            return mutation.target === _this.domNode && mutation.type === 'attributes';\n        })) {\n            this.attributes.build();\n        }\n    };\n    FormatBlot.prototype.wrap = function (name, value) {\n        var wrapper = _super.prototype.wrap.call(this, name, value);\n        if (wrapper instanceof FormatBlot && wrapper.statics.scope === this.statics.scope) {\n            this.attributes.move(wrapper);\n        }\n        return wrapper;\n    };\n    return FormatBlot;\n}(container_1.default));\nexports.default = FormatBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/abstract/format.ts\n// module id = 3\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shadow_1 = require(\"./shadow\");\nvar Registry = require(\"../../registry\");\nvar LeafBlot = /** @class */ (function (_super) {\n    __extends(LeafBlot, _super);\n    function LeafBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LeafBlot.value = function (domNode) {\n        return true;\n    };\n    LeafBlot.prototype.index = function (node, offset) {\n        if (this.domNode === node ||\n            this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            return Math.min(offset, 1);\n        }\n        return -1;\n    };\n    LeafBlot.prototype.position = function (index, inclusive) {\n        var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);\n        if (index > 0)\n            offset += 1;\n        return [this.parent.domNode, offset];\n    };\n    LeafBlot.prototype.value = function () {\n        return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;\n        var _a;\n    };\n    LeafBlot.scope = Registry.Scope.INLINE_BLOT;\n    return LeafBlot;\n}(shadow_1.default));\nexports.default = LeafBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/abstract/leaf.ts\n// module id = 4\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Registry = require(\"../../registry\");\nvar ShadowBlot = /** @class */ (function () {\n    function ShadowBlot(domNode) {\n        this.domNode = domNode;\n        // @ts-ignore\n        this.domNode[Registry.DATA_KEY] = { blot: this };\n    }\n    Object.defineProperty(ShadowBlot.prototype, \"statics\", {\n        // Hack for accessing inherited static methods\n        get: function () {\n            return this.constructor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShadowBlot.create = function (value) {\n        if (this.tagName == null) {\n            throw new Registry.ParchmentError('Blot definition missing tagName');\n        }\n        var node;\n        if (Array.isArray(this.tagName)) {\n            if (typeof value === 'string') {\n                value = value.toUpperCase();\n                if (parseInt(value).toString() === value) {\n                    value = parseInt(value);\n                }\n            }\n            if (typeof value === 'number') {\n                node = document.createElement(this.tagName[value - 1]);\n            }\n            else if (this.tagName.indexOf(value) > -1) {\n                node = document.createElement(value);\n            }\n            else {\n                node = document.createElement(this.tagName[0]);\n            }\n        }\n        else {\n            node = document.createElement(this.tagName);\n        }\n        if (this.className) {\n            node.classList.add(this.className);\n        }\n        return node;\n    };\n    ShadowBlot.prototype.attach = function () {\n        if (this.parent != null) {\n            this.scroll = this.parent.scroll;\n        }\n    };\n    ShadowBlot.prototype.clone = function () {\n        var domNode = this.domNode.cloneNode(false);\n        return Registry.create(domNode);\n    };\n    ShadowBlot.prototype.detach = function () {\n        if (this.parent != null)\n            this.parent.removeChild(this);\n        // @ts-ignore\n        delete this.domNode[Registry.DATA_KEY];\n    };\n    ShadowBlot.prototype.deleteAt = function (index, length) {\n        var blot = this.isolate(index, length);\n        blot.remove();\n    };\n    ShadowBlot.prototype.formatAt = function (index, length, name, value) {\n        var blot = this.isolate(index, length);\n        if (Registry.query(name, Registry.Scope.BLOT) != null && value) {\n            blot.wrap(name, value);\n        }\n        else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {\n            var parent_1 = Registry.create(this.statics.scope);\n            blot.wrap(parent_1);\n            parent_1.format(name, value);\n        }\n    };\n    ShadowBlot.prototype.insertAt = function (index, value, def) {\n        var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);\n        var ref = this.split(index);\n        this.parent.insertBefore(blot, ref);\n    };\n    ShadowBlot.prototype.insertInto = function (parentBlot, refBlot) {\n        if (refBlot === void 0) { refBlot = null; }\n        if (this.parent != null) {\n            this.parent.children.remove(this);\n        }\n        var refDomNode = null;\n        parentBlot.children.insertBefore(this, refBlot);\n        if (refBlot != null) {\n            refDomNode = refBlot.domNode;\n        }\n        if (this.domNode.parentNode != parentBlot.domNode ||\n            this.domNode.nextSibling != refDomNode) {\n            parentBlot.domNode.insertBefore(this.domNode, refDomNode);\n        }\n        this.parent = parentBlot;\n        this.attach();\n    };\n    ShadowBlot.prototype.isolate = function (index, length) {\n        var target = this.split(index);\n        target.split(length);\n        return target;\n    };\n    ShadowBlot.prototype.length = function () {\n        return 1;\n    };\n    ShadowBlot.prototype.offset = function (root) {\n        if (root === void 0) { root = this.parent; }\n        if (this.parent == null || this == root)\n            return 0;\n        return this.parent.children.offset(this) + this.parent.offset(root);\n    };\n    ShadowBlot.prototype.optimize = function (context) {\n        // TODO clean up once we use WeakMap\n        // @ts-ignore\n        if (this.domNode[Registry.DATA_KEY] != null) {\n            // @ts-ignore\n            delete this.domNode[Registry.DATA_KEY].mutations;\n        }\n    };\n    ShadowBlot.prototype.remove = function () {\n        if (this.domNode.parentNode != null) {\n            this.domNode.parentNode.removeChild(this.domNode);\n        }\n        this.detach();\n    };\n    ShadowBlot.prototype.replace = function (target) {\n        if (target.parent == null)\n            return;\n        target.parent.insertBefore(this, target.next);\n        target.remove();\n    };\n    ShadowBlot.prototype.replaceWith = function (name, value) {\n        var replacement = typeof name === 'string' ? Registry.create(name, value) : name;\n        replacement.replace(this);\n        return replacement;\n    };\n    ShadowBlot.prototype.split = function (index, force) {\n        return index === 0 ? this : this.next;\n    };\n    ShadowBlot.prototype.update = function (mutations, context) {\n        // Nothing to do by default\n    };\n    ShadowBlot.prototype.wrap = function (name, value) {\n        var wrapper = typeof name === 'string' ? Registry.create(name, value) : name;\n        if (this.parent != null) {\n            this.parent.insertBefore(wrapper, this.next);\n        }\n        wrapper.appendChild(this);\n        return wrapper;\n    };\n    ShadowBlot.blotName = 'abstract';\n    return ShadowBlot;\n}());\nexports.default = ShadowBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/abstract/shadow.ts\n// module id = 5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = require(\"./attributor\");\nvar class_1 = require(\"./class\");\nvar style_1 = require(\"./style\");\nvar Registry = require(\"../registry\");\nvar AttributorStore = /** @class */ (function () {\n    function AttributorStore(domNode) {\n        this.attributes = {};\n        this.domNode = domNode;\n        this.build();\n    }\n    AttributorStore.prototype.attribute = function (attribute, value) {\n        // verb\n        if (value) {\n            if (attribute.add(this.domNode, value)) {\n                if (attribute.value(this.domNode) != null) {\n                    this.attributes[attribute.attrName] = attribute;\n                }\n                else {\n                    delete this.attributes[attribute.attrName];\n                }\n            }\n        }\n        else {\n            attribute.remove(this.domNode);\n            delete this.attributes[attribute.attrName];\n        }\n    };\n    AttributorStore.prototype.build = function () {\n        var _this = this;\n        this.attributes = {};\n        var attributes = attributor_1.default.keys(this.domNode);\n        var classes = class_1.default.keys(this.domNode);\n        var styles = style_1.default.keys(this.domNode);\n        attributes\n            .concat(classes)\n            .concat(styles)\n            .forEach(function (name) {\n            var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);\n            if (attr instanceof attributor_1.default) {\n                _this.attributes[attr.attrName] = attr;\n            }\n        });\n    };\n    AttributorStore.prototype.copy = function (target) {\n        var _this = this;\n        Object.keys(this.attributes).forEach(function (key) {\n            var value = _this.attributes[key].value(_this.domNode);\n            target.format(key, value);\n        });\n    };\n    AttributorStore.prototype.move = function (target) {\n        var _this = this;\n        this.copy(target);\n        Object.keys(this.attributes).forEach(function (key) {\n            _this.attributes[key].remove(_this.domNode);\n        });\n        this.attributes = {};\n    };\n    AttributorStore.prototype.values = function () {\n        var _this = this;\n        return Object.keys(this.attributes).reduce(function (attributes, name) {\n            attributes[name] = _this.attributes[name].value(_this.domNode);\n            return attributes;\n        }, {});\n    };\n    return AttributorStore;\n}());\nexports.default = AttributorStore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/attributor/store.ts\n// module id = 6\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = require(\"./attributor\");\nfunction match(node, prefix) {\n    var className = node.getAttribute('class') || '';\n    return className.split(/\\s+/).filter(function (name) {\n        return name.indexOf(prefix + \"-\") === 0;\n    });\n}\nvar ClassAttributor = /** @class */ (function (_super) {\n    __extends(ClassAttributor, _super);\n    function ClassAttributor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ClassAttributor.keys = function (node) {\n        return (node.getAttribute('class') || '').split(/\\s+/).map(function (name) {\n            return name\n                .split('-')\n                .slice(0, -1)\n                .join('-');\n        });\n    };\n    ClassAttributor.prototype.add = function (node, value) {\n        if (!this.canAdd(node, value))\n            return false;\n        this.remove(node);\n        node.classList.add(this.keyName + \"-\" + value);\n        return true;\n    };\n    ClassAttributor.prototype.remove = function (node) {\n        var matches = match(node, this.keyName);\n        matches.forEach(function (name) {\n            node.classList.remove(name);\n        });\n        if (node.classList.length === 0) {\n            node.removeAttribute('class');\n        }\n    };\n    ClassAttributor.prototype.value = function (node) {\n        var result = match(node, this.keyName)[0] || '';\n        var value = result.slice(this.keyName.length + 1); // +1 for hyphen\n        return this.canAdd(node, value) ? value : '';\n    };\n    return ClassAttributor;\n}(attributor_1.default));\nexports.default = ClassAttributor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/attributor/class.ts\n// module id = 7\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = require(\"./attributor\");\nfunction camelize(name) {\n    var parts = name.split('-');\n    var rest = parts\n        .slice(1)\n        .map(function (part) {\n        return part[0].toUpperCase() + part.slice(1);\n    })\n        .join('');\n    return parts[0] + rest;\n}\nvar StyleAttributor = /** @class */ (function (_super) {\n    __extends(StyleAttributor, _super);\n    function StyleAttributor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StyleAttributor.keys = function (node) {\n        return (node.getAttribute('style') || '').split(';').map(function (value) {\n            var arr = value.split(':');\n            return arr[0].trim();\n        });\n    };\n    StyleAttributor.prototype.add = function (node, value) {\n        if (!this.canAdd(node, value))\n            return false;\n        // @ts-ignore\n        node.style[camelize(this.keyName)] = value;\n        return true;\n    };\n    StyleAttributor.prototype.remove = function (node) {\n        // @ts-ignore\n        node.style[camelize(this.keyName)] = '';\n        if (!node.getAttribute('style')) {\n            node.removeAttribute('style');\n        }\n    };\n    StyleAttributor.prototype.value = function (node) {\n        // @ts-ignore\n        var value = node.style[camelize(this.keyName)];\n        return this.canAdd(node, value) ? value : '';\n    };\n    return StyleAttributor;\n}(attributor_1.default));\nexports.default = StyleAttributor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/attributor/style.ts\n// module id = 8\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar container_1 = require(\"./blot/abstract/container\");\nvar format_1 = require(\"./blot/abstract/format\");\nvar leaf_1 = require(\"./blot/abstract/leaf\");\nvar scroll_1 = require(\"./blot/scroll\");\nvar inline_1 = require(\"./blot/inline\");\nvar block_1 = require(\"./blot/block\");\nvar embed_1 = require(\"./blot/embed\");\nvar text_1 = require(\"./blot/text\");\nvar attributor_1 = require(\"./attributor/attributor\");\nvar class_1 = require(\"./attributor/class\");\nvar style_1 = require(\"./attributor/style\");\nvar store_1 = require(\"./attributor/store\");\nvar Registry = require(\"./registry\");\nvar Parchment = {\n    Scope: Registry.Scope,\n    create: Registry.create,\n    find: Registry.find,\n    query: Registry.query,\n    register: Registry.register,\n    Container: container_1.default,\n    Format: format_1.default,\n    Leaf: leaf_1.default,\n    Embed: embed_1.default,\n    Scroll: scroll_1.default,\n    Block: block_1.default,\n    Inline: inline_1.default,\n    Text: text_1.default,\n    Attributor: {\n        Attribute: attributor_1.default,\n        Class: class_1.default,\n        Style: style_1.default,\n        Store: store_1.default,\n    },\n};\nexports.default = Parchment;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/parchment.ts\n// module id = 10\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this.head = this.tail = null;\n        this.length = 0;\n    }\n    LinkedList.prototype.append = function () {\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        this.insertBefore(nodes[0], null);\n        if (nodes.length > 1) {\n            this.append.apply(this, nodes.slice(1));\n        }\n    };\n    LinkedList.prototype.contains = function (node) {\n        var cur, next = this.iterator();\n        while ((cur = next())) {\n            if (cur === node)\n                return true;\n        }\n        return false;\n    };\n    LinkedList.prototype.insertBefore = function (node, refNode) {\n        if (!node)\n            return;\n        node.next = refNode;\n        if (refNode != null) {\n            node.prev = refNode.prev;\n            if (refNode.prev != null) {\n                refNode.prev.next = node;\n            }\n            refNode.prev = node;\n            if (refNode === this.head) {\n                this.head = node;\n            }\n        }\n        else if (this.tail != null) {\n            this.tail.next = node;\n            node.prev = this.tail;\n            this.tail = node;\n        }\n        else {\n            node.prev = null;\n            this.head = this.tail = node;\n        }\n        this.length += 1;\n    };\n    LinkedList.prototype.offset = function (target) {\n        var index = 0, cur = this.head;\n        while (cur != null) {\n            if (cur === target)\n                return index;\n            index += cur.length();\n            cur = cur.next;\n        }\n        return -1;\n    };\n    LinkedList.prototype.remove = function (node) {\n        if (!this.contains(node))\n            return;\n        if (node.prev != null)\n            node.prev.next = node.next;\n        if (node.next != null)\n            node.next.prev = node.prev;\n        if (node === this.head)\n            this.head = node.next;\n        if (node === this.tail)\n            this.tail = node.prev;\n        this.length -= 1;\n    };\n    LinkedList.prototype.iterator = function (curNode) {\n        if (curNode === void 0) { curNode = this.head; }\n        // TODO use yield when we can\n        return function () {\n            var ret = curNode;\n            if (curNode != null)\n                curNode = curNode.next;\n            return ret;\n        };\n    };\n    LinkedList.prototype.find = function (index, inclusive) {\n        if (inclusive === void 0) { inclusive = false; }\n        var cur, next = this.iterator();\n        while ((cur = next())) {\n            var length_1 = cur.length();\n            if (index < length_1 ||\n                (inclusive && index === length_1 && (cur.next == null || cur.next.length() !== 0))) {\n                return [cur, index];\n            }\n            index -= length_1;\n        }\n        return [null, 0];\n    };\n    LinkedList.prototype.forEach = function (callback) {\n        var cur, next = this.iterator();\n        while ((cur = next())) {\n            callback(cur);\n        }\n    };\n    LinkedList.prototype.forEachAt = function (index, length, callback) {\n        if (length <= 0)\n            return;\n        var _a = this.find(index), startNode = _a[0], offset = _a[1];\n        var cur, curIndex = index - offset, next = this.iterator(startNode);\n        while ((cur = next()) && curIndex < index + length) {\n            var curLength = cur.length();\n            if (index > curIndex) {\n                callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));\n            }\n            else {\n                callback(cur, 0, Math.min(curLength, index + length - curIndex));\n            }\n            curIndex += curLength;\n        }\n    };\n    LinkedList.prototype.map = function (callback) {\n        return this.reduce(function (memo, cur) {\n            memo.push(callback(cur));\n            return memo;\n        }, []);\n    };\n    LinkedList.prototype.reduce = function (callback, memo) {\n        var cur, next = this.iterator();\n        while ((cur = next())) {\n            memo = callback(memo, cur);\n        }\n        return memo;\n    };\n    return LinkedList;\n}());\nexports.default = LinkedList;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/collection/linked-list.ts\n// module id = 11\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar container_1 = require(\"./abstract/container\");\nvar Registry = require(\"../registry\");\nvar OBSERVER_CONFIG = {\n    attributes: true,\n    characterData: true,\n    characterDataOldValue: true,\n    childList: true,\n    subtree: true,\n};\nvar MAX_OPTIMIZE_ITERATIONS = 100;\nvar ScrollBlot = /** @class */ (function (_super) {\n    __extends(ScrollBlot, _super);\n    function ScrollBlot(node) {\n        var _this = _super.call(this, node) || this;\n        _this.scroll = _this;\n        _this.observer = new MutationObserver(function (mutations) {\n            _this.update(mutations);\n        });\n        _this.observer.observe(_this.domNode, OBSERVER_CONFIG);\n        _this.attach();\n        return _this;\n    }\n    ScrollBlot.prototype.detach = function () {\n        _super.prototype.detach.call(this);\n        this.observer.disconnect();\n    };\n    ScrollBlot.prototype.deleteAt = function (index, length) {\n        this.update();\n        if (index === 0 && length === this.length()) {\n            this.children.forEach(function (child) {\n                child.remove();\n            });\n        }\n        else {\n            _super.prototype.deleteAt.call(this, index, length);\n        }\n    };\n    ScrollBlot.prototype.formatAt = function (index, length, name, value) {\n        this.update();\n        _super.prototype.formatAt.call(this, index, length, name, value);\n    };\n    ScrollBlot.prototype.insertAt = function (index, value, def) {\n        this.update();\n        _super.prototype.insertAt.call(this, index, value, def);\n    };\n    ScrollBlot.prototype.optimize = function (mutations, context) {\n        var _this = this;\n        if (mutations === void 0) { mutations = []; }\n        if (context === void 0) { context = {}; }\n        _super.prototype.optimize.call(this, context);\n        // We must modify mutations directly, cannot make copy and then modify\n        var records = [].slice.call(this.observer.takeRecords());\n        // Array.push currently seems to be implemented by a non-tail recursive function\n        // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n        while (records.length > 0)\n            mutations.push(records.pop());\n        // TODO use WeakMap\n        var mark = function (blot, markParent) {\n            if (markParent === void 0) { markParent = true; }\n            if (blot == null || blot === _this)\n                return;\n            if (blot.domNode.parentNode == null)\n                return;\n            // @ts-ignore\n            if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n                // @ts-ignore\n                blot.domNode[Registry.DATA_KEY].mutations = [];\n            }\n            if (markParent)\n                mark(blot.parent);\n        };\n        var optimize = function (blot) {\n            // Post-order traversal\n            if (\n            // @ts-ignore\n            blot.domNode[Registry.DATA_KEY] == null ||\n                // @ts-ignore\n                blot.domNode[Registry.DATA_KEY].mutations == null) {\n                return;\n            }\n            if (blot instanceof container_1.default) {\n                blot.children.forEach(optimize);\n            }\n            blot.optimize(context);\n        };\n        var remaining = mutations;\n        for (var i = 0; remaining.length > 0; i += 1) {\n            if (i >= MAX_OPTIMIZE_ITERATIONS) {\n                throw new Error('[Parchment] Maximum optimize iterations reached');\n            }\n            remaining.forEach(function (mutation) {\n                var blot = Registry.find(mutation.target, true);\n                if (blot == null)\n                    return;\n                if (blot.domNode === mutation.target) {\n                    if (mutation.type === 'childList') {\n                        mark(Registry.find(mutation.previousSibling, false));\n                        [].forEach.call(mutation.addedNodes, function (node) {\n                            var child = Registry.find(node, false);\n                            mark(child, false);\n                            if (child instanceof container_1.default) {\n                                child.children.forEach(function (grandChild) {\n                                    mark(grandChild, false);\n                                });\n                            }\n                        });\n                    }\n                    else if (mutation.type === 'attributes') {\n                        mark(blot.prev);\n                    }\n                }\n                mark(blot);\n            });\n            this.children.forEach(optimize);\n            remaining = [].slice.call(this.observer.takeRecords());\n            records = remaining.slice();\n            while (records.length > 0)\n                mutations.push(records.pop());\n        }\n    };\n    ScrollBlot.prototype.update = function (mutations, context) {\n        var _this = this;\n        if (context === void 0) { context = {}; }\n        mutations = mutations || this.observer.takeRecords();\n        // TODO use WeakMap\n        mutations\n            .map(function (mutation) {\n            var blot = Registry.find(mutation.target, true);\n            if (blot == null)\n                return null;\n            // @ts-ignore\n            if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n                // @ts-ignore\n                blot.domNode[Registry.DATA_KEY].mutations = [mutation];\n                return blot;\n            }\n            else {\n                // @ts-ignore\n                blot.domNode[Registry.DATA_KEY].mutations.push(mutation);\n                return null;\n            }\n        })\n            .forEach(function (blot) {\n            if (blot == null ||\n                blot === _this ||\n                //@ts-ignore\n                blot.domNode[Registry.DATA_KEY] == null)\n                return;\n            // @ts-ignore\n            blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);\n        });\n        // @ts-ignore\n        if (this.domNode[Registry.DATA_KEY].mutations != null) {\n            // @ts-ignore\n            _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);\n        }\n        this.optimize(mutations, context);\n    };\n    ScrollBlot.blotName = 'scroll';\n    ScrollBlot.defaultChild = 'block';\n    ScrollBlot.scope = Registry.Scope.BLOCK_BLOT;\n    ScrollBlot.tagName = 'DIV';\n    return ScrollBlot;\n}(container_1.default));\nexports.default = ScrollBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/scroll.ts\n// module id = 12\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar format_1 = require(\"./abstract/format\");\nvar Registry = require(\"../registry\");\n// Shallow object comparison\nfunction isEqual(obj1, obj2) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length)\n        return false;\n    // @ts-ignore\n    for (var prop in obj1) {\n        // @ts-ignore\n        if (obj1[prop] !== obj2[prop])\n            return false;\n    }\n    return true;\n}\nvar InlineBlot = /** @class */ (function (_super) {\n    __extends(InlineBlot, _super);\n    function InlineBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InlineBlot.formats = function (domNode) {\n        if (domNode.tagName === InlineBlot.tagName)\n            return undefined;\n        return _super.formats.call(this, domNode);\n    };\n    InlineBlot.prototype.format = function (name, value) {\n        var _this = this;\n        if (name === this.statics.blotName && !value) {\n            this.children.forEach(function (child) {\n                if (!(child instanceof format_1.default)) {\n                    child = child.wrap(InlineBlot.blotName, true);\n                }\n                _this.attributes.copy(child);\n            });\n            this.unwrap();\n        }\n        else {\n            _super.prototype.format.call(this, name, value);\n        }\n    };\n    InlineBlot.prototype.formatAt = function (index, length, name, value) {\n        if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {\n            var blot = this.isolate(index, length);\n            blot.format(name, value);\n        }\n        else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n        }\n    };\n    InlineBlot.prototype.optimize = function (context) {\n        _super.prototype.optimize.call(this, context);\n        var formats = this.formats();\n        if (Object.keys(formats).length === 0) {\n            return this.unwrap(); // unformatted span\n        }\n        var next = this.next;\n        if (next instanceof InlineBlot && next.prev === this && isEqual(formats, next.formats())) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    };\n    InlineBlot.blotName = 'inline';\n    InlineBlot.scope = Registry.Scope.INLINE_BLOT;\n    InlineBlot.tagName = 'SPAN';\n    return InlineBlot;\n}(format_1.default));\nexports.default = InlineBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/inline.ts\n// module id = 13\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar format_1 = require(\"./abstract/format\");\nvar Registry = require(\"../registry\");\nvar BlockBlot = /** @class */ (function (_super) {\n    __extends(BlockBlot, _super);\n    function BlockBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BlockBlot.formats = function (domNode) {\n        var tagName = Registry.query(BlockBlot.blotName).tagName;\n        if (domNode.tagName === tagName)\n            return undefined;\n        return _super.formats.call(this, domNode);\n    };\n    BlockBlot.prototype.format = function (name, value) {\n        if (Registry.query(name, Registry.Scope.BLOCK) == null) {\n            return;\n        }\n        else if (name === this.statics.blotName && !value) {\n            this.replaceWith(BlockBlot.blotName);\n        }\n        else {\n            _super.prototype.format.call(this, name, value);\n        }\n    };\n    BlockBlot.prototype.formatAt = function (index, length, name, value) {\n        if (Registry.query(name, Registry.Scope.BLOCK) != null) {\n            this.format(name, value);\n        }\n        else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n        }\n    };\n    BlockBlot.prototype.insertAt = function (index, value, def) {\n        if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {\n            // Insert text or inline\n            _super.prototype.insertAt.call(this, index, value, def);\n        }\n        else {\n            var after = this.split(index);\n            var blot = Registry.create(value, def);\n            after.parent.insertBefore(blot, after);\n        }\n    };\n    BlockBlot.prototype.update = function (mutations, context) {\n        if (navigator.userAgent.match(/Trident/)) {\n            this.build();\n        }\n        else {\n            _super.prototype.update.call(this, mutations, context);\n        }\n    };\n    BlockBlot.blotName = 'block';\n    BlockBlot.scope = Registry.Scope.BLOCK_BLOT;\n    BlockBlot.tagName = 'P';\n    return BlockBlot;\n}(format_1.default));\nexports.default = BlockBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/block.ts\n// module id = 14\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar leaf_1 = require(\"./abstract/leaf\");\nvar EmbedBlot = /** @class */ (function (_super) {\n    __extends(EmbedBlot, _super);\n    function EmbedBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmbedBlot.formats = function (domNode) {\n        return undefined;\n    };\n    EmbedBlot.prototype.format = function (name, value) {\n        // super.formatAt wraps, which is what we want in general,\n        // but this allows subclasses to overwrite for formats\n        // that just apply to particular embeds\n        _super.prototype.formatAt.call(this, 0, this.length(), name, value);\n    };\n    EmbedBlot.prototype.formatAt = function (index, length, name, value) {\n        if (index === 0 && length === this.length()) {\n            this.format(name, value);\n        }\n        else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n        }\n    };\n    EmbedBlot.prototype.formats = function () {\n        return this.statics.formats(this.domNode);\n    };\n    return EmbedBlot;\n}(leaf_1.default));\nexports.default = EmbedBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/embed.ts\n// module id = 15\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar leaf_1 = require(\"./abstract/leaf\");\nvar Registry = require(\"../registry\");\nvar TextBlot = /** @class */ (function (_super) {\n    __extends(TextBlot, _super);\n    function TextBlot(node) {\n        var _this = _super.call(this, node) || this;\n        _this.text = _this.statics.value(_this.domNode);\n        return _this;\n    }\n    TextBlot.create = function (value) {\n        return document.createTextNode(value);\n    };\n    TextBlot.value = function (domNode) {\n        var text = domNode.data;\n        // @ts-ignore\n        if (text['normalize'])\n            text = text['normalize']();\n        return text;\n    };\n    TextBlot.prototype.deleteAt = function (index, length) {\n        this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);\n    };\n    TextBlot.prototype.index = function (node, offset) {\n        if (this.domNode === node) {\n            return offset;\n        }\n        return -1;\n    };\n    TextBlot.prototype.insertAt = function (index, value, def) {\n        if (def == null) {\n            this.text = this.text.slice(0, index) + value + this.text.slice(index);\n            this.domNode.data = this.text;\n        }\n        else {\n            _super.prototype.insertAt.call(this, index, value, def);\n        }\n    };\n    TextBlot.prototype.length = function () {\n        return this.text.length;\n    };\n    TextBlot.prototype.optimize = function (context) {\n        _super.prototype.optimize.call(this, context);\n        this.text = this.statics.value(this.domNode);\n        if (this.text.length === 0) {\n            this.remove();\n        }\n        else if (this.next instanceof TextBlot && this.next.prev === this) {\n            this.insertAt(this.length(), this.next.value());\n            this.next.remove();\n        }\n    };\n    TextBlot.prototype.position = function (index, inclusive) {\n        if (inclusive === void 0) { inclusive = false; }\n        return [this.domNode, index];\n    };\n    TextBlot.prototype.split = function (index, force) {\n        if (force === void 0) { force = false; }\n        if (!force) {\n            if (index === 0)\n                return this;\n            if (index === this.length())\n                return this.next;\n        }\n        var after = Registry.create(this.domNode.splitText(index));\n        this.parent.insertBefore(after, this.next);\n        this.text = this.statics.value(this.domNode);\n        return after;\n    };\n    TextBlot.prototype.update = function (mutations, context) {\n        var _this = this;\n        if (mutations.some(function (mutation) {\n            return mutation.type === 'characterData' && mutation.target === _this.domNode;\n        })) {\n            this.text = this.statics.value(this.domNode);\n        }\n    };\n    TextBlot.prototype.value = function () {\n        return this.text;\n    };\n    TextBlot.blotName = 'text';\n    TextBlot.scope = Registry.Scope.INLINE_BLOT;\n    return TextBlot;\n}(leaf_1.default));\nexports.default = TextBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/text.ts\n// module id = 16\n// module chunks = 0"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}