{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\repos\\\\PlotPilot\\\\client\\\\src\\\\Components\\\\UserResponse.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"quill/dist/quill.snow.css\";\nimport BlockAdBlock from \"blockadblock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserResponse() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  useEffect(() => {\n    const detector = new BlockAdBlock();\n    detector.onDetected(() => {\n      setIsReadOnly(true);\n    });\n  }, []);\n  const handleChange = (content, delta, source, editor) => {\n    const text = editor.getText().trim();\n    const currentWordCount = text.length ? text.split(/\\s+/).length : 0;\n    if (currentWordCount <= 1000) {\n      setValue(content);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n      theme: \"snow\",\n      className: \"editor-container\",\n      value: value,\n      onChange: handleChange,\n      readOnly: isReadOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Word count: \", value.split(/\\s+/).length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(UserResponse, \"rq9n3jYWSx9SykHaC90YTTN2yqk=\");\n_c = UserResponse;\nexport default UserResponse;\nvar _c;\n$RefreshReg$(_c, \"UserResponse\");","map":{"version":3,"names":["React","useEffect","useState","ReactQuill","BlockAdBlock","jsxDEV","_jsxDEV","UserResponse","_s","value","setValue","isReadOnly","setIsReadOnly","detector","onDetected","handleChange","content","delta","source","editor","text","getText","trim","currentWordCount","length","split","children","theme","className","onChange","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/dev/repos/PlotPilot/client/src/Components/UserResponse.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport BlockAdBlock from \"blockadblock\";\r\n\r\nfunction UserResponse() {\r\n  const [value, setValue] = useState(\"\");\r\n  const [isReadOnly, setIsReadOnly] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const detector = new BlockAdBlock();\r\n    detector.onDetected(() => {\r\n      setIsReadOnly(true);\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = (content, delta, source, editor) => {\r\n    const text = editor.getText().trim();\r\n    const currentWordCount = text.length ? text.split(/\\s+/).length : 0;\r\n    if (currentWordCount <= 1000) {\r\n      setValue(content);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ReactQuill\r\n        theme=\"snow\"\r\n        className=\"editor-container\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        readOnly={isReadOnly}\r\n      />\r\n      <p>Word count: {value.split(/\\s+/).length}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserResponse;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,2BAA2B;AAClC,OAAOC,YAAY,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAG,IAAIT,YAAY,EAAE;IACnCS,QAAQ,CAACC,UAAU,CAAC,MAAM;MACxBF,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAGA,CAACC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,KAAK;IACvD,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO,EAAE,CAACC,IAAI,EAAE;IACpC,MAAMC,gBAAgB,GAAGH,IAAI,CAACI,MAAM,GAAGJ,IAAI,CAACK,KAAK,CAAC,KAAK,CAAC,CAACD,MAAM,GAAG,CAAC;IACnE,IAAID,gBAAgB,IAAI,IAAI,EAAE;MAC5Bb,QAAQ,CAACM,OAAO,CAAC;IACnB;EACF,CAAC;EAED,oBACEV,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACH,UAAU;MACTwB,KAAK,EAAC,MAAM;MACZC,SAAS,EAAC,kBAAkB;MAC5BnB,KAAK,EAAEA,KAAM;MACboB,QAAQ,EAAEd,YAAa;MACvBe,QAAQ,EAAEnB;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB,eACF5B,OAAA;MAAAoB,QAAA,GAAG,cAAY,EAACjB,KAAK,CAACgB,KAAK,CAAC,KAAK,CAAC,CAACD,MAAM;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1C;AAEV;AAAC1B,EAAA,CA/BQD,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAiCrB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}