{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\repos\\\\PlotPilot\\\\client\\\\src\\\\Components\\\\UserResponse.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Button } from \"react-bulma-components\";\nimport ReactQuill from \"react-quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserResponse() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [wordCount, setWordCount] = useState(0);\n  const quillRef = useRef(null);\n  useEffect(() => {\n    console.log(value);\n  }, [value]);\n  const handleChange = (content, delta, source, editor) => {\n    const text = editor.getText().trim();\n    const currentWordCount = text.length ? text.split(/\\s+/).length : 0;\n    if (currentWordCount <= 1000) {\n      setValue(content);\n      setWordCount(currentWordCount);\n    }\n  };\n  function getWordCount(wordCount) {\n    if (wordCount >= 1000) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  document.addEventListener(\"keydown\", function (event) {\n    if (event.key === \"Backspace\") {\n      console.log(\"Backspace key pressed\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n      ref: quillRef,\n      theme: \"snow\",\n      className: \"editor-container\",\n      value: value,\n      onChange: handleChange,\n      readOnly: getWordCount(wordCount)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Word count: \", wordCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"submit-button mt-2\",\n      fullwidth: true,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(UserResponse, \"IFxTp7oi76guCYclQKJA8EN6h24=\");\n_c = UserResponse;\nexport default UserResponse;\nvar _c;\n$RefreshReg$(_c, \"UserResponse\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Button","ReactQuill","jsxDEV","_jsxDEV","UserResponse","_s","value","setValue","wordCount","setWordCount","quillRef","console","log","handleChange","content","delta","source","editor","text","getText","trim","currentWordCount","length","split","getWordCount","document","addEventListener","event","key","children","ref","theme","className","onChange","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","fullwidth","_c","$RefreshReg$"],"sources":["C:/dev/repos/PlotPilot/client/src/Components/UserResponse.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button } from \"react-bulma-components\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"quill/dist/quill.snow.css\";\r\n\r\nfunction UserResponse() {\r\n  const [value, setValue] = useState(\"\");\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const quillRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log(value);\r\n  }, [value]);\r\n\r\n  const handleChange = (content, delta, source, editor) => {\r\n    const text = editor.getText().trim();\r\n    const currentWordCount = text.length ? text.split(/\\s+/).length : 0;\r\n    if (currentWordCount <= 1000) {\r\n      setValue(content);\r\n      setWordCount(currentWordCount);\r\n    } \r\n  };\r\n\r\nfunction getWordCount(wordCount) {\r\n    if (wordCount >= 1000) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\ndocument.addEventListener(\"keydown\", function(event) {\r\n    if (event.key === \"Backspace\") {\r\n      console.log(\"Backspace key pressed\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ReactQuill\r\n        ref={quillRef}\r\n        theme=\"snow\"\r\n        className=\"editor-container\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        readOnly={getWordCount(wordCount)}\r\n      />\r\n      <p>Word count: {wordCount}</p>\r\n      <Button className=\"submit-button mt-2\" fullwidth={true}>\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserResponse;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAMY,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE7BF,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EACpB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMO,YAAY,GAAGA,CAACC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,KAAK;IACvD,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO,EAAE,CAACC,IAAI,EAAE;IACpC,MAAMC,gBAAgB,GAAGH,IAAI,CAACI,MAAM,GAAGJ,IAAI,CAACK,KAAK,CAAC,KAAK,CAAC,CAACD,MAAM,GAAG,CAAC;IACnE,IAAID,gBAAgB,IAAI,IAAI,EAAE;MAC5Bd,QAAQ,CAACO,OAAO,CAAC;MACjBL,YAAY,CAACY,gBAAgB,CAAC;IAChC;EACF,CAAC;EAEH,SAASG,YAAYA,CAAChB,SAAS,EAAE;IAC7B,IAAIA,SAAS,IAAI,IAAI,EAAE;MACnB,OAAO,IAAI;IACf,CAAC,MAAM;MACH,OAAO,KAAK;IAChB;EACJ;EACAiB,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAE,UAASC,KAAK,EAAE;IACjD,IAAIA,KAAK,CAACC,GAAG,KAAK,WAAW,EAAE;MAC7BjB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC;EACF,CAAC,CAAC;EAEF,oBACET,OAAA;IAAA0B,QAAA,gBACE1B,OAAA,CAACF,UAAU;MACT6B,GAAG,EAAEpB,QAAS;MACdqB,KAAK,EAAC,MAAM;MACZC,SAAS,EAAC,kBAAkB;MAC5B1B,KAAK,EAAEA,KAAM;MACb2B,QAAQ,EAAEpB,YAAa;MACvBqB,QAAQ,EAAEV,YAAY,CAAChB,SAAS;IAAE;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClC,eACFnC,OAAA;MAAA0B,QAAA,GAAG,cAAY,EAACrB,SAAS;IAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC9BnC,OAAA,CAACH,MAAM;MAACgC,SAAS,EAAC,oBAAoB;MAACO,SAAS,EAAE,IAAK;MAAAV,QAAA,EAAC;IAExD;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACjC,EAAA,CA/CQD,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAiDrB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}