{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\repos\\\\PlotPilot\\\\client\\\\src\\\\Components\\\\UserResponse.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Button } from \"react-bulma-components\";\nimport ReactQuill from \"react-quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserResponse() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [charCount, setCharCount] = useState(0);\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  const [adBlockEnabled, setAdBlockEnabled] = useState(false);\n  const quillRef = useRef(null);\n  useEffect(() => {\n    console.log(value);\n  }, [value]);\n  useEffect(() => {\n    const checkAdblockStatus = () => {\n      if (document.getElementById(\"xjrRuYBDKTIX\")) {\n        console.log(\"Blocking Ads: No\");\n        setIsReadOnly(false);\n        setAdBlockEnabled(false);\n      } else {\n        console.log(\"Blocking Ads: Yes\");\n        setIsReadOnly(true);\n        setAdBlockEnabled(true);\n      }\n    };\n\n    // Run the check immediately\n    checkAdblockStatus();\n\n    // Set up an interval to periodically check ad-block status\n    const intervalId = setInterval(() => {\n      checkAdblockStatus();\n    }, 5000); // Check every 5 seconds\n\n    // Clean up the interval on component unmount\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  const handleChange = (content, delta, source, editor) => {\n    const text = editor.getText().trim();\n    const currentCharCount = text.length;\n    if (currentCharCount > 4000) {\n      const newText = text.slice(0, 4000);\n      setValue(newText);\n      setCharCount(4000);\n    } else {\n      setValue(content);\n      setCharCount(currentCharCount);\n    }\n  };\n  const handleBlur = () => {\n    if (adBlockEnabled) {\n      quillRef.current.getEditor().focus();\n    }\n  };\n  const sendContentToServer = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/moderate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: value\n        })\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n\n      // Handle the moderation response here (e.g., display an alert or update the UI)\n    } catch (error) {\n      console.error('Error sending content to server:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quill-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n        ref: quillRef,\n        theme: \"snow\",\n        className: `editor-container ${adBlockEnabled ? \"blurred\" : \"\"}`,\n        value: value,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        readOnly: isReadOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), adBlockEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adblock-message\",\n        children: [\"Please disable your ad-blocker or\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"https://platform.openai.com/account/api-keys\",\n          target: \"_blank\",\n          children: \"provide an OpenAI API key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), \"\\xA0to use this input.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"char-count\",\n      children: [\"Character count: \", charCount, \"/4000\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"submit-button mt-2\",\n      fullwidth: true,\n      onClick: sendContentToServer,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(UserResponse, \"rrhx8Vik7y4NCuNGp1TnlstcnT4=\");\n_c = UserResponse;\nexport default UserResponse;\nvar _c;\n$RefreshReg$(_c, \"UserResponse\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Button","ReactQuill","Link","jsxDEV","_jsxDEV","UserResponse","_s","value","setValue","charCount","setCharCount","isReadOnly","setIsReadOnly","adBlockEnabled","setAdBlockEnabled","quillRef","console","log","checkAdblockStatus","document","getElementById","intervalId","setInterval","clearInterval","handleChange","content","delta","source","editor","text","getText","trim","currentCharCount","length","newText","slice","handleBlur","current","getEditor","focus","sendContentToServer","response","fetch","method","headers","body","JSON","stringify","responseData","json","error","children","className","ref","theme","onChange","onBlur","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","to","target","fullwidth","onClick","_c","$RefreshReg$"],"sources":["C:/dev/repos/PlotPilot/client/src/Components/UserResponse.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button } from \"react-bulma-components\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction UserResponse() {\r\n  const [value, setValue] = useState(\"\");\r\n  const [charCount, setCharCount] = useState(0);\r\n  const [isReadOnly, setIsReadOnly] = useState(false);\r\n  const [adBlockEnabled, setAdBlockEnabled] = useState(false);\r\n  const quillRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log(value);\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    const checkAdblockStatus = () => {\r\n      if (document.getElementById(\"xjrRuYBDKTIX\")) {\r\n        console.log(\"Blocking Ads: No\");\r\n        setIsReadOnly(false);\r\n        setAdBlockEnabled(false);\r\n      } else {\r\n        console.log(\"Blocking Ads: Yes\");\r\n        setIsReadOnly(true);\r\n        setAdBlockEnabled(true);\r\n      }\r\n    };\r\n\r\n    // Run the check immediately\r\n    checkAdblockStatus();\r\n\r\n    // Set up an interval to periodically check ad-block status\r\n    const intervalId = setInterval(() => {\r\n      checkAdblockStatus();\r\n    }, 5000); // Check every 5 seconds\r\n\r\n    // Clean up the interval on component unmount\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (content, delta, source, editor) => {\r\n    const text = editor.getText().trim();\r\n    const currentCharCount = text.length;\r\n    if (currentCharCount > 4000) {\r\n      const newText = text.slice(0, 4000);\r\n      setValue(newText);\r\n      setCharCount(4000);\r\n    } else {\r\n      setValue(content);\r\n      setCharCount(currentCharCount);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (adBlockEnabled) {\r\n      quillRef.current.getEditor().focus();\r\n    }\r\n  };\r\n  const sendContentToServer = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/moderate', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ content: value }),\r\n      });\r\n  \r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n  \r\n      // Handle the moderation response here (e.g., display an alert or update the UI)\r\n    } catch (error) {\r\n      console.error('Error sending content to server:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"quill-wrapper\">\r\n        <ReactQuill\r\n          ref={quillRef}\r\n          theme=\"snow\"\r\n          className={`editor-container ${adBlockEnabled ? \"blurred\" : \"\"}`}\r\n          value={value}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          readOnly={isReadOnly}\r\n        />\r\n        {adBlockEnabled && (\r\n          <div className=\"adblock-message\">\r\n            Please disable your ad-blocker or&nbsp;\r\n            <Link to=\"https://platform.openai.com/account/api-keys\" target=\"_blank\">\r\n              provide an OpenAI API key\r\n            </Link>\r\n            &nbsp;to use this input.\r\n          </div>\r\n        )}\r\n      </div>\r\n      <p className=\"char-count\">Character count: {charCount}/4000</p>\r\n      <Button className=\"submit-button mt-2\" fullwidth={true} onClick={sendContentToServer}>\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserResponse;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}