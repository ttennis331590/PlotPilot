{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\repos\\\\PlotPilot\\\\client\\\\src\\\\Components\\\\SubmitPrompt.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Button } from \"react-bulma-components\";\nimport ReactQuill from \"react-quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserResponse() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [wordCount, setWordCount] = useState(0);\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  const quillRef = useRef(null);\n  useEffect(() => {\n    console.log(value);\n  }, [value]);\n  const handleBackspace = event => {\n    if (event.key === 'Backspace') {\n      setIsReadOnly(false);\n    }\n  };\n  useEffect(() => {\n    quillRef.current.getEditor().container.addEventListener('keydown', handleBackspace);\n    return () => {\n      quillRef.current.getEditor().container.removeEventListener('keydown', handleBackspace);\n    };\n  }, []);\n  const handleChange = (content, delta, source, editor) => {\n    const text = editor.getText().trim();\n    const currentWordCount = text.length ? text.split(/\\s+/).length : 0;\n    if (isReadOnly) {\n      if (currentWordCount <= 100) {\n        setValue(content);\n        setWordCount(currentWordCount);\n        setIsReadOnly(false);\n      }\n    } else {\n      if (currentWordCount > 100) {\n        setIsReadOnly(true);\n      }\n      setValue(content);\n      setWordCount(currentWordCount);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quill-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n        ref: quillRef,\n        theme: \"snow\",\n        className: `editor-container`,\n        value: value,\n        onChange: handleChange,\n        readOnly: isReadOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"word-count\",\n      children: [\"Word count: \", wordCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"submit-button mt-2\",\n      fullwidth: true,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(UserResponse, \"1AWTu5YQRvXC5Ggr01QyrVl+y3A=\");\n_c = UserResponse;\nexport default UserResponse;\nvar _c;\n$RefreshReg$(_c, \"UserResponse\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Button","ReactQuill","Link","jsxDEV","_jsxDEV","UserResponse","_s","value","setValue","wordCount","setWordCount","isReadOnly","setIsReadOnly","quillRef","console","log","handleBackspace","event","key","current","getEditor","container","addEventListener","removeEventListener","handleChange","content","delta","source","editor","text","getText","trim","currentWordCount","length","split","children","className","ref","theme","onChange","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","fullwidth","_c","$RefreshReg$"],"sources":["C:/dev/repos/PlotPilot/client/src/Components/SubmitPrompt.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button } from \"react-bulma-components\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction UserResponse() {\r\n  const [value, setValue] = useState(\"\");\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const [isReadOnly, setIsReadOnly] = useState(false);\r\n  const quillRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log(value);\r\n  }, [value]);\r\n\r\n  const handleBackspace = (event) => {\r\n    if (event.key === 'Backspace') {\r\n      setIsReadOnly(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    quillRef.current.getEditor().container.addEventListener('keydown', handleBackspace);\r\n\r\n    return () => {\r\n      quillRef.current.getEditor().container.removeEventListener('keydown', handleBackspace);\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (content, delta, source, editor) => {\r\n    const text = editor.getText().trim();\r\n    const currentWordCount = text.length ? text.split(/\\s+/).length : 0;\r\n    if (isReadOnly) {\r\n      if (currentWordCount <= 100) {\r\n        setValue(content);\r\n        setWordCount(currentWordCount);\r\n        setIsReadOnly(false);\r\n      }\r\n    } else {\r\n      if (currentWordCount > 100) {\r\n        setIsReadOnly(true);\r\n      }\r\n      setValue(content);\r\n      setWordCount(currentWordCount);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"quill-wrapper\">\r\n        <ReactQuill\r\n          ref={quillRef}\r\n          theme=\"snow\"\r\n          className={`editor-container`}\r\n          value={value}\r\n          onChange={handleChange}\r\n          readOnly={isReadOnly}\r\n        />\r\n      </div>\r\n      <p className=\"word-count\">Word count: {wordCount}</p>\r\n      <Button className=\"submit-button mt-2\" fullwidth={true}>\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserResponse;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}