{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\repos\\\\PlotPilot\\\\client\\\\src\\\\Components\\\\SubmitPrompt.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bulma-components\";\nimport ReactQuill from \"react-quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserResponse() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [wordCount, setWordCount] = useState(0);\n  const countWords = text => {\n    const trimmedText = text.trim();\n    return trimmedText.length ? trimmedText.split(/\\s+/).length : 0;\n  };\n  const handleChange = (content, delta, source, editor) => {\n    const text = editor.getText();\n    const currentWordCount = countWords(text);\n    if (currentWordCount <= 100) {\n      setValue(content);\n      setWordCount(currentWordCount);\n    }\n  };\n  const getMaxLength = () => {\n    const text = value.trim();\n    const words = text.split(/\\s+/);\n    let length = 0;\n    words.forEach((word, index) => {\n      length += word.length + 1;\n      if (index === 99) {\n        length -= 1;\n      }\n    });\n    return length;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quill-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n        theme: \"snow\",\n        className: `editor-container`,\n        value: value,\n        onChange: handleChange,\n        maxLength: getMaxLength()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"word-count\",\n      children: [\"Word count: \", wordCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"submit-button mt-2\",\n      fullwidth: true,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(UserResponse, \"ASfifl5mtaI+ehq4knw+IhK2CJQ=\");\n_c = UserResponse;\nexport default UserResponse;\nvar _c;\n$RefreshReg$(_c, \"UserResponse\");","map":{"version":3,"names":["React","useState","Button","ReactQuill","Link","jsxDEV","_jsxDEV","UserResponse","_s","value","setValue","wordCount","setWordCount","countWords","text","trimmedText","trim","length","split","handleChange","content","delta","source","editor","getText","currentWordCount","getMaxLength","words","forEach","word","index","children","className","theme","onChange","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","fullwidth","_c","$RefreshReg$"],"sources":["C:/dev/repos/PlotPilot/client/src/Components/SubmitPrompt.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"react-bulma-components\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction UserResponse() {\r\n  const [value, setValue] = useState(\"\");\r\n  const [wordCount, setWordCount] = useState(0);\r\n\r\n  const countWords = (text) => {\r\n    const trimmedText = text.trim();\r\n    return trimmedText.length ? trimmedText.split(/\\s+/).length : 0;\r\n  };\r\n\r\n  const handleChange = (content, delta, source, editor) => {\r\n    const text = editor.getText();\r\n    const currentWordCount = countWords(text);\r\n    if (currentWordCount <= 100) {\r\n      setValue(content);\r\n      setWordCount(currentWordCount);\r\n    }\r\n  };\r\n\r\n  const getMaxLength = () => {\r\n    const text = value.trim();\r\n    const words = text.split(/\\s+/);\r\n    let length = 0;\r\n    words.forEach((word, index) => {\r\n      length += word.length + 1;\r\n      if (index === 99) {\r\n        length -= 1;\r\n      }\r\n    });\r\n    return length;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"quill-wrapper\">\r\n        <ReactQuill\r\n          theme=\"snow\"\r\n          className={`editor-container`}\r\n          value={value}\r\n          onChange={handleChange}\r\n          maxLength={getMaxLength()}\r\n        />\r\n      </div>\r\n      <p className=\"word-count\">Word count: {wordCount}</p>\r\n      <Button className=\"submit-button mt-2\" fullwidth={true}>\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserResponse;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,2BAA2B;AAClC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMY,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,WAAW,GAAGD,IAAI,CAACE,IAAI,EAAE;IAC/B,OAAOD,WAAW,CAACE,MAAM,GAAGF,WAAW,CAACG,KAAK,CAAC,KAAK,CAAC,CAACD,MAAM,GAAG,CAAC;EACjE,CAAC;EAED,MAAME,YAAY,GAAGA,CAACC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,KAAK;IACvD,MAAMT,IAAI,GAAGS,MAAM,CAACC,OAAO,EAAE;IAC7B,MAAMC,gBAAgB,GAAGZ,UAAU,CAACC,IAAI,CAAC;IACzC,IAAIW,gBAAgB,IAAI,GAAG,EAAE;MAC3Bf,QAAQ,CAACU,OAAO,CAAC;MACjBR,YAAY,CAACa,gBAAgB,CAAC;IAChC;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMZ,IAAI,GAAGL,KAAK,CAACO,IAAI,EAAE;IACzB,MAAMW,KAAK,GAAGb,IAAI,CAACI,KAAK,CAAC,KAAK,CAAC;IAC/B,IAAID,MAAM,GAAG,CAAC;IACdU,KAAK,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC7Bb,MAAM,IAAIY,IAAI,CAACZ,MAAM,GAAG,CAAC;MACzB,IAAIa,KAAK,KAAK,EAAE,EAAE;QAChBb,MAAM,IAAI,CAAC;MACb;IACF,CAAC,CAAC;IACF,OAAOA,MAAM;EACf,CAAC;EAED,oBACEX,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAK0B,SAAS,EAAC,eAAe;MAAAD,QAAA,eAC5BzB,OAAA,CAACH,UAAU;QACT8B,KAAK,EAAC,MAAM;QACZD,SAAS,EAAG,kBAAkB;QAC9BvB,KAAK,EAAEA,KAAM;QACbyB,QAAQ,EAAEf,YAAa;QACvBgB,SAAS,EAAET,YAAY;MAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC1B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACNjC,OAAA;MAAG0B,SAAS,EAAC,YAAY;MAAAD,QAAA,GAAC,cAAY,EAACpB,SAAS;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACrDjC,OAAA,CAACJ,MAAM;MAAC8B,SAAS,EAAC,oBAAoB;MAACQ,SAAS,EAAE,IAAK;MAAAT,QAAA,EAAC;IAExD;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAAC/B,EAAA,CAhDQD,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAkDrB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}